{"version":3,"sources":["01-sonar-sweep/input1.js","01-sonar-sweep/day1.js","02-dive/input1.js","02-dive/day2.js","03-binary-diagnostic/input1.js","03-binary-diagnostic/day3.js","04-giant-squid/input1.js","04-giant-squid/board.js","04-giant-squid/day4.js","05-hydrothermal-venture/input1.js","05-hydrothermal-venture/day5.js","06-lanternfish/input1.js","06-lanternfish/day6.js","App.js","reportWebVitals.js","index.js"],"names":["puzzle","Day1","React","useState","puzzleInput","setPuzzleInput","first","setFirst","second","setSecond","useEffect","input1","split","map","v","trim","reduce","total","current","index","console","log","parseInt","length","dangerouslySetInnerHTML","__html","join","className","Day2","prepData","setPrepData","showAnimate","setShowAnimate","subRef","useRef","subX","setSubX","subY","setSubY","_input","_prepData","p","match","direction","distance","x","y","totalX","setTotalX","totalY","setTotalY","forEach","totalX2","setTotalX2","totalY2","setTotalY2","totalAim","setTotalAim","aim","onClick","top","left","xRatio","window","innerWidth","offsetWidth","yRatio","innerHeight","offsetHeight","style","counter","moveSubmarine","setTimeout","ref","visibility","Day3","gammaBinary","setGammaBinary","gammaRate","setGammaRate","epsilonBinary","setEpsilonBinary","epsilonRate","setEpsilonRate","oxygenBinary","setOxygenBinary","co2Binary","setCO2Binary","oxygenRating","setOxygenRating","co2Rating","setCO2Rating","getBinaries","binaryArray","counts","Map","b","indx","bNum","has","set","get","totalNums","_gammaRate","_epsilonRate","value","key","_gamma","_epsilon","warn","oxyResults","commonBits","bitIndex","bit","substring","filter","r","co2Results","Board","board","numbers","winningNumber","playedNumbers","setPlayedNumbers","currentNumber","setCurrentNumber","playGame","push","rows","row","line","col","some","n","Day4","bingoNumbers","setBingoNumbers","boards","setBoards","winningBoard","setWinningBoard","lastBoard","setLastBoard","firstWinningNumber","setFirstWinningNumber","secondWinningNumber","setSecondWinningNumber","lines","shift","_boards","matchValue","totalValue","columns","winning","rowVals","l","rowSum","a","idx","colNum","deepClone","obj","str","JSON","stringify","parse","_winningBoard","_winningNum","find","num","retVal","c","unmarkedTotal","Day5","startStr","endStr","x1","y1","x2","y2","start","end","allCoords","coord","stop","i","newCoord","newCoordStr","curr","countOver1","startx","Day6","fishies","newFishes","fish","newAge","fishCounts","Array","fill","day","fishAt0","age","App","selectedDay","setSelectedDay","selectedDayComponent","setSelectedDayComponent","location","search","params","URLSearchParams","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf5631f.chunk.js","sourcesContent":["const puzzle = `109\n117\n118\n98\n102\n94\n101\n109\n121\n126\n117\n116\n134\n119\n98\n97\n96\n98\n101\n107\n123\n134\n137\n160\n171\n188\n189\n188\n169\n163\n182\n184\n187\n184\n196\n199\n218\n222\n223\n218\n214\n220\n215\n223\n226\n228\n236\n237\n268\n277\n282\n284\n285\n288\n289\n313\n322\n331\n335\n331\n316\n323\n314\n313\n314\n301\n302\n320\n315\n323\n324\n346\n347\n362\n376\n377\n378\n379\n381\n391\n392\n395\n391\n393\n399\n401\n403\n428\n423\n422\n427\n430\n432\n431\n433\n449\n456\n455\n456\n457\n456\n460\n461\n460\n459\n460\n467\n468\n505\n506\n513\n505\n509\n510\n511\n521\n522\n523\n525\n521\n514\n517\n510\n507\n534\n543\n554\n552\n578\n587\n593\n598\n591\n592\n579\n580\n576\n594\n593\n594\n598\n610\n611\n609\n607\n606\n609\n616\n617\n605\n604\n616\n628\n641\n642\n643\n644\n641\n652\n645\n637\n652\n651\n648\n649\n647\n650\n651\n652\n660\n675\n672\n643\n624\n633\n635\n626\n642\n645\n651\n658\n671\n674\n684\n687\n668\n675\n650\n662\n680\n679\n701\n704\n716\n720\n727\n736\n734\n738\n735\n742\n754\n781\n777\n778\n792\n795\n797\n796\n816\n819\n829\n839\n846\n839\n864\n865\n868\n869\n873\n878\n876\n878\n881\n882\n909\n922\n929\n944\n945\n944\n945\n954\n958\n959\n963\n967\n960\n957\n965\n986\n1006\n986\n1007\n1010\n1011\n1000\n1001\n970\n974\n972\n974\n982\n990\n988\n1002\n1003\n1027\n1037\n1034\n1045\n1036\n1038\n1036\n1016\n1015\n1032\n1038\n1040\n1041\n1043\n1046\n1088\n1105\n1112\n1113\n1114\n1117\n1132\n1130\n1132\n1121\n1124\n1112\n1117\n1118\n1122\n1123\n1154\n1155\n1153\n1150\n1151\n1167\n1171\n1172\n1173\n1174\n1181\n1183\n1193\n1194\n1227\n1231\n1234\n1253\n1256\n1255\n1242\n1255\n1276\n1280\n1297\n1298\n1308\n1309\n1307\n1325\n1327\n1329\n1325\n1319\n1323\n1324\n1327\n1361\n1364\n1368\n1360\n1365\n1348\n1357\n1358\n1359\n1372\n1373\n1377\n1381\n1383\n1385\n1384\n1387\n1382\n1381\n1410\n1405\n1412\n1413\n1416\n1417\n1423\n1434\n1437\n1442\n1443\n1445\n1460\n1461\n1459\n1479\n1452\n1475\n1492\n1503\n1508\n1507\n1479\n1480\n1472\n1471\n1478\n1479\n1456\n1459\n1469\n1457\n1460\n1465\n1469\n1477\n1478\n1482\n1485\n1486\n1485\n1463\n1473\n1477\n1480\n1482\n1493\n1494\n1495\n1507\n1502\n1501\n1496\n1494\n1495\n1493\n1490\n1497\n1521\n1530\n1524\n1525\n1521\n1529\n1545\n1529\n1526\n1538\n1525\n1505\n1506\n1511\n1512\n1513\n1512\n1515\n1548\n1555\n1557\n1575\n1576\n1598\n1596\n1609\n1605\n1608\n1621\n1631\n1632\n1645\n1647\n1660\n1665\n1693\n1703\n1697\n1699\n1711\n1701\n1702\n1703\n1715\n1716\n1717\n1693\n1692\n1697\n1669\n1670\n1673\n1690\n1697\n1705\n1707\n1726\n1720\n1721\n1726\n1732\n1731\n1739\n1749\n1737\n1713\n1718\n1734\n1735\n1742\n1745\n1742\n1741\n1742\n1743\n1776\n1779\n1797\n1801\n1802\n1804\n1806\n1807\n1803\n1804\n1806\n1817\n1815\n1802\n1803\n1809\n1811\n1814\n1811\n1815\n1817\n1818\n1817\n1808\n1819\n1824\n1829\n1830\n1817\n1819\n1820\n1821\n1822\n1823\n1827\n1828\n1829\n1832\n1834\n1839\n1845\n1848\n1857\n1859\n1879\n1880\n1885\n1888\n1887\n1912\n1910\n1917\n1929\n1930\n1931\n1932\n1930\n1914\n1917\n1904\n1910\n1913\n1901\n1903\n1904\n1900\n1896\n1917\n1921\n1910\n1914\n1915\n1917\n1915\n1916\n1939\n1940\n1941\n1942\n1943\n1946\n1947\n1962\n1946\n1949\n1938\n1935\n1927\n1928\n1931\n1932\n1933\n1931\n1957\n1951\n1956\n1957\n1958\n1969\n1967\n1966\n1992\n1991\n1997\n1999\n2010\n2016\n2039\n2043\n2047\n2048\n2046\n2064\n2069\n2072\n2084\n2094\n2103\n2104\n2105\n2080\n2090\n2092\n2079\n2094\n2100\n2097\n2105\n2104\n2092\n2093\n2094\n2100\n2105\n2106\n2122\n2126\n2128\n2134\n2141\n2153\n2154\n2157\n2170\n2171\n2158\n2156\n2180\n2181\n2167\n2182\n2188\n2166\n2162\n2167\n2163\n2181\n2191\n2192\n2195\n2237\n2236\n2249\n2255\n2258\n2271\n2272\n2257\n2260\n2263\n2264\n2281\n2282\n2285\n2289\n2293\n2279\n2284\n2287\n2292\n2291\n2303\n2304\n2302\n2306\n2324\n2323\n2327\n2330\n2321\n2332\n2316\n2320\n2323\n2336\n2332\n2303\n2304\n2303\n2304\n2308\n2311\n2324\n2325\n2347\n2348\n2345\n2340\n2348\n2347\n2348\n2346\n2352\n2345\n2346\n2347\n2350\n2354\n2359\n2363\n2369\n2374\n2378\n2377\n2393\n2400\n2403\n2405\n2404\n2411\n2417\n2415\n2408\n2407\n2409\n2419\n2420\n2446\n2448\n2450\n2451\n2446\n2447\n2448\n2450\n2451\n2449\n2448\n2450\n2453\n2454\n2460\n2463\n2465\n2474\n2471\n2473\n2471\n2485\n2487\n2483\n2501\n2494\n2519\n2517\n2516\n2517\n2520\n2523\n2524\n2489\n2491\n2494\n2493\n2504\n2507\n2512\n2513\n2511\n2512\n2488\n2495\n2484\n2476\n2477\n2480\n2479\n2487\n2495\n2492\n2493\n2513\n2512\n2506\n2513\n2514\n2515\n2499\n2506\n2510\n2505\n2506\n2512\n2513\n2515\n2527\n2515\n2516\n2533\n2534\n2535\n2536\n2541\n2548\n2586\n2588\n2601\n2604\n2614\n2616\n2615\n2622\n2624\n2639\n2638\n2642\n2647\n2637\n2654\n2613\n2614\n2618\n2609\n2608\n2609\n2613\n2634\n2631\n2651\n2658\n2660\n2670\n2674\n2675\n2678\n2682\n2686\n2680\n2683\n2689\n2691\n2690\n2691\n2697\n2700\n2704\n2716\n2720\n2723\n2737\n2734\n2737\n2736\n2737\n2740\n2741\n2743\n2737\n2738\n2737\n2746\n2752\n2748\n2749\n2755\n2756\n2758\n2774\n2784\n2785\n2800\n2802\n2811\n2813\n2825\n2819\n2822\n2823\n2829\n2824\n2823\n2824\n2805\n2808\n2806\n2821\n2820\n2826\n2834\n2833\n2837\n2850\n2853\n2857\n2869\n2868\n2870\n2891\n2890\n2895\n2896\n2905\n2926\n2928\n2926\n2930\n2929\n2938\n2970\n2976\n2968\n2967\n2988\n3000\n3001\n3002\n3003\n3020\n3021\n3025\n3035\n3041\n3040\n3014\n3013\n3019\n3024\n3025\n3035\n3036\n3032\n3054\n3065\n3064\n3053\n3054\n3058\n3052\n3061\n3063\n3064\n3068\n3096\n3095\n3091\n3114\n3124\n3130\n3137\n3146\n3147\n3148\n3142\n3144\n3145\n3150\n3151\n3149\n3158\n3146\n3144\n3135\n3153\n3166\n3168\n3167\n3151\n3147\n3155\n3156\n3159\n3156\n3159\n3160\n3175\n3174\n3188\n3182\n3175\n3185\n3189\n3194\n3169\n3173\n3176\n3177\n3169\n3137\n3138\n3148\n3139\n3141\n3142\n3162\n3163\n3168\n3164\n3168\n3167\n3176\n3173\n3197\n3198\n3199\n3216\n3232\n3245\n3272\n3295\n3294\n3291\n3301\n3303\n3304\n3306\n3307\n3306\n3312\n3291\n3292\n3290\n3266\n3271\n3261\n3267\n3268\n3288\n3300\n3289\n3297\n3264\n3271\n3255\n3256\n3263\n3266\n3269\n3308\n3323\n3320\n3326\n3332\n3334\n3335\n3341\n3369\n3375\n3365\n3359\n3362\n3365\n3370\n3371\n3364\n3365\n3366\n3375\n3376\n3392\n3393\n3428\n3458\n3474\n3475\n3484\n3490\n3496\n3512\n3510\n3512\n3513\n3516\n3517\n3540\n3550\n3549\n3540\n3552\n3559\n3549\n3550\n3568\n3569\n3568\n3572\n3576\n3578\n3580\n3581\n3583\n3586\n3590\n3574\n3576\n3579\n3563\n3558\n3557\n3554\n3556\n3564\n3561\n3563\n3583\n3582\n3590\n3594\n3583\n3578\n3596\n3602\n3615\n3621\n3625\n3631\n3633\n3655\n3636\n3639\n3640\n3641\n3644\n3646\n3652\n3655\n3671\n3681\n3685\n3692\n3673\n3691\n3696\n3692\n3695\n3704\n3719\n3721\n3728\n3737\n3738\n3754\n3757\n3754\n3759\n3758\n3765\n3767\n3770\n3774\n3769\n3756\n3755\n3750\n3780\n3782\n3781\n3785\n3788\n3771\n3774\n3775\n3764\n3742\n3743\n3755\n3759\n3757\n3767\n3771\n3770\n3776\n3778\n3773\n3774\n3775\n3778\n3777\n3764\n3773\n3767\n3768\n3769\n3792\n3810\n3808\n3791\n3789\n3790\n3816\n3838\n3841\n3849\n3850\n3849\n3853\n3854\n3878\n3880\n3892\n3911\n3886\n3885\n3889\n3892\n3893\n3918\n3919\n3915\n3916\n3913\n3928\n3955\n3956\n3961\n3959\n3963\n3962\n3964\n3973\n3969\n3972\n3973\n3974\n3993\n3995\n3998\n4018\n4026\n4027\n4026\n4027\n4024\n4039\n4052\n4055\n4056\n4060\n4077\n4069\n4066\n4067\n4071\n4102\n4099\n4106\n4112\n4114\n4125\n4130\n4127\n4157\n4147\n4148\n4127\n4130\n4131\n4130\n4129\n4134\n4124\n4132\n4133\n4134\n4153\n4154\n4157\n4154\n4187\n4168\n4165\n4170\n4172\n4205\n4203\n4204\n4174\n4175\n4172\n4169\n4171\n4198\n4203\n4215\n4209\n4212\n4213\n4229\n4230\n4232\n4233\n4237\n4242\n4243\n4268\n4277\n4278\n4284\n4293\n4298\n4302\n4281\n4282\n4280\n4271\n4264\n4265\n4258\n4269\n4268\n4273\n4276\n4284\n4270\n4271\n4266\n4275\n4305\n4309\n4314\n4316\n4324\n4323\n4335\n4338\n4339\n4368\n4369\n4368\n4373\n4375\n4366\n4370\n4376\n4375\n4374\n4377\n4378\n4379\n4380\n4392\n4395\n4391\n4389\n4390\n4391\n4400\n4393\n4391\n4396\n4364\n4351\n4385\n4387\n4391\n4395\n4387\n4407\n4408\n4410\n4426\n4449\n4450\n4460\n4461\n4460\n4465\n4469\n4472\n4479\n4489\n4492\n4508\n4512\n4527\n4537\n4544\n4552\n4553\n4561\n4566\n4567\n4561\n4559\n4550\n4543\n4549\n4554\n4557\n4558\n4570\n4585\n4595\n4597\n4584\n4583\n4605\n4603\n4606\n4607\n4608\n4612\n4611\n4610\n4620\n4621\n4613\n4615\n4605\n4617\n4626\n4650\n4655\n4665\n4664\n4663\n4665\n4669\n4668\n4670\n4662\n4666\n4665\n4660\n4661\n4673\n4676\n4679\n4685\n4687\n4708\n4704\n4707\n4717\n4718\n4716\n4724\n4715\n4718\n4721\n4714\n4738\n4739\n4740\n4753\n4756\n4757\n4763\n4754\n4755\n4747\n4760\n4761\n4760\n4781\n4774\n4776\n4784\n4786\n4785\n4783\n4798\n4800\n4796\n4795\n4798\n4800\n4801\n4805\n4794\n4800\n4819\n4823\n4824\n4822\n4816\n4820\n4826\n4831\n4830\n4832\n4833\n4827\n4822\n4826\n4825\n4824\n4823\n4824\n4844\n4849\n4853\n4858\n4861\n4859\n4856\n4841\n4843\n4844\n4843\n4858\n4859\n4864\n4860\n4857\n4869\n4901\n4902\n4907\n4908\n4909\n4911\n4914\n4918\n4906\n4907\n4912\n4902\n4911\n4888\n4890\n4888\n4885\n4887\n4873\n4874\n4880\n4891\n4890\n4891\n4892\n4909\n4910\n4930\n4932\n4937\n4940\n4948\n4950\n4945\n4948\n4949\n4950\n4946\n4945\n4936\n4954\n4955\n4942\n4952\n4956\n4959\n4958\n4960\n4958\n4964\n4972\n4974\n4973\n4974\n4988\n4989\n4956\n4960\n4959\n4966\n4968\n4961\n4965\n4971\n4979\n4983\n4990\n4991\n4990\n4993\n4997\n5016\n5010\n5008\n5009\n4997\n4998\n4999\n5008\n5021\n5022\n5023\n5024\n5030\n5014\n5017\n5022\n5018\n5017\n5021\n5023\n5002\n5003\n5004\n5010\n4998\n4999\n5008\n5007\n5011\n5013\n5039\n5041\n5043\n5046\n5057\n5055\n5017\n5015\n5010\n5011\n5017\n5011\n5019\n5020\n5022\n5023\n5032\n5033\n5042\n5062\n5083\n5092\n5093\n5081\n5082\n5085\n5086\n5085\n5087\n5099\n5096\n5085\n5088\n5087\n5090\n5091\n5104\n5092\n5093\n5081\n5080\n5082\n5086\n5087\n5088\n5098\n5097\n5101\n5114\n5117\n5120\n5128\n5129\n5126\n5127\n5128\n5129\n5135\n5138\n5142\n5145\n5146\n5169\n5170\n5172\n5168\n5172\n5189\n5190\n5201\n5222\n5219\n5220\n5237\n5238\n5245\n5286\n5280\n5293\n5294\n5306\n5305\n5308\n5317\n5320\n5322\n5347\n5363\n5361\n5359\n5365\n5373\n5375\n5379\n5378\n5379\n5381\n5388\n5386\n5389\n5401\n5402\n5401\n5403\n5409\n5404\n5409\n5414\n5415\n5434\n5436\n5444\n5448\n5465\n5464\n5465\n5466\n5468\n5469\n5456\n5460\n5443\n5445\n5443\n5439\n5438\n5445\n5452\n5484\n5487\n5481\n5488\n5489\n5504\n5513\n5536\n5539\n5547\n5571\n5584\n5597\n5601\n5572\n5575\n5582\n5583\n5586\n5591\n5590\n5603\n5598\n5603\n5588\n5570\n5571\n5573\n5575\n5594\n5595\n5599\n5602\n5610\n5641\n5639\n5647\n5656\n5663\n5661\n5664\n5651\n5645\n5650\n5658\n5659\n5660\n5655\n5654\n5655\n5673\n5672\n5655\n5653\n5661\n5666\n5669\n5671\n5675\n5681\n5692\n5685\n5684\n5685\n5684\n5724\n5725\n5732\n5731\n5732\n5733\n5728\n5743\n5742\n5767\n5775\n5779\n5783\n5774\n5778\n5783\n5795\n5797\n5801\n5795\n5794\n5795\n5790\n5789\n5791\n5789\n5791\n5792\n5788\n5789\n5798\n5799\n5792\n5802\n5801\n5808\n5805\n5806\n5799\n5795\n5812\n5816\n5818\n5794\n5779\n5781\n5792\n5799\n5814\n5805\n5809\n5811\n5813\n5816\n5820\n5835\n5830\n5829\n5857\n5862\n5863\n5854\n5849\n5852\n5855\n5853\n5852\n5853\n5857\n5858\n5867\n5863\n5865\n5864\n5875\n5900\n5874\n5883\n5886\n5915\n5913\n5914\n5882\n5888\n5889\n5890\n5891\n5880\n5883\n5901\n5903\n5904\n5907\n5910\n5913\n5928\n5954\n5963\n5964\n5967\n5975\n5976\n5973\n5979\n5980\n5979\n5990\n5989\n6002\n5998\n6006\n6012\n6007\n6014\n6019\n6020\n6019\n6008\n6022\n6032\n6028\n6010\n6009\n6022\n6023\n6025\n6030\n6037\n6038\n6041\n6035\n6025\n6020\n6036\n6026\n6027\n6032\n6041\n6034\n6036\n6044\n6055\n6061\n6101\n6102\n6123\n6128\n6129\n6131\n6141\n6142\n6143\n6144\n6143\n6140\n6143\n6153\n6154\n6168\n6170\n6167\n6174\n6180\n6160\n6162\n6167\n6163\n6160\n6167\n6166\n6167\n6164\n6153\n6155\n6185\n6193\n6170\n6190\n6201\n6238\n6225\n6223\n6222\n6225\n6227\n6232\n6229\n6230\n6234\n6239\n6240\n6254\n6253\n6240\n6252\n6273\n6266\n6276\n6277\n6276\n6299\n6300\n6299\n6289\n6291\n6289\n6287\n6288\n6287\n6289\n6292\n6293\n6297\n6308`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day1 = () => {  \n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n  \n  // get the input into a usable array\n  React.useEffect(() => {\n    setPuzzleInput(input1.split('\\n').map(v => v.trim()))\n  }, [])\n\n  // first challenge, find how many times the number increases from the number before it\n  React.useEffect(() => {\n    setFirst(puzzleInput.reduce((total, current, index) => {\n      console.log('first', index, current)\n      if (index > 0) {\n        if (current > parseInt(puzzleInput[index - 1])) {\n          return total + 1\n        }\n      }\n      return total\n    }, 0))\n  }, [puzzleInput])\n\n  // second challenge, find how many times the three-measurement window increases\n  React.useEffect(() => {\n    setSecond(puzzleInput.reduce((total, current, index) => {\n      console.log('second', index, current)\n      if (index > 0) {\n        // get the current sliding measurement, including current plus the next two\n        const currentMeasure = parseInt(puzzleInput[index]) + parseInt(puzzleInput[index + 1]) + parseInt(puzzleInput[index + 2])\n        // get the previous sliding measurement, starting at the previous record plus the next two\n        const previousMeasure = parseInt(puzzleInput[index - 1]) + parseInt(puzzleInput[index]) + parseInt(puzzleInput[index + 1])\n        if (currentMeasure > previousMeasure) {\n          return total + 1\n        }\n      }\n      return total\n    }, 0))\n  }, [puzzleInput])\n\n  return (\n    <div >\n      <h2>Day 1 - Sonar Sweep</h2>\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n      <h2>Answer #1</h2>\n      {first}\n      <h2>Answer #2</h2>\n      {second}\n    </div>\n  );\n}\n\nexport default Day1","const puzzle = `forward 3\ndown 9\nforward 6\ndown 3\nforward 8\ndown 3\ndown 4\nforward 3\nforward 5\nup 7\nforward 1\nforward 1\nforward 5\ndown 8\ndown 5\nforward 3\nforward 2\nforward 4\ndown 7\nup 2\nup 2\ndown 5\ndown 5\ndown 8\ndown 2\ndown 4\nforward 8\nforward 8\nup 2\ndown 2\nup 8\nup 4\nforward 7\nup 8\ndown 6\nforward 9\nforward 6\nforward 5\nup 1\nforward 6\nforward 8\ndown 4\nforward 6\nup 8\ndown 9\nforward 1\ndown 1\nup 8\ndown 5\ndown 7\nforward 7\nup 8\nforward 4\nforward 5\nup 9\ndown 4\nforward 4\nup 5\ndown 6\nforward 3\nforward 2\nforward 3\nforward 6\nup 4\nup 7\nforward 6\nforward 2\ndown 1\nforward 3\nforward 3\nforward 2\ndown 6\nforward 2\nforward 4\nforward 9\nforward 1\nup 6\nforward 7\ndown 6\ndown 7\nforward 6\nup 4\ndown 7\nup 9\nup 2\ndown 6\ndown 6\nforward 9\ndown 2\nforward 5\nup 3\nup 6\nforward 3\nforward 3\nup 8\nforward 1\nforward 9\nforward 9\nup 6\nforward 3\nforward 2\nforward 8\nup 8\nforward 5\nup 6\nforward 9\ndown 4\ndown 5\nforward 7\ndown 6\nforward 8\nup 9\nforward 2\ndown 8\nup 4\nforward 7\ndown 9\nforward 5\nforward 7\ndown 4\nforward 3\nforward 7\nforward 4\nforward 7\nforward 4\nup 1\ndown 1\ndown 6\nup 4\nforward 2\ndown 5\ndown 8\ndown 1\nup 2\ndown 6\ndown 3\nforward 5\nforward 5\ndown 5\nforward 3\nforward 3\ndown 9\ndown 9\nup 5\ndown 5\ndown 3\nforward 2\ndown 1\nup 6\ndown 1\ndown 3\ndown 7\nforward 3\nforward 5\nforward 7\nup 9\nup 9\ndown 1\nforward 2\nup 4\ndown 1\nup 4\nforward 3\nforward 5\ndown 2\nforward 7\ndown 6\ndown 2\nforward 7\nforward 7\ndown 9\nup 4\ndown 6\ndown 1\ndown 5\ndown 5\ndown 3\ndown 1\nforward 9\nforward 4\nup 8\ndown 1\nup 7\ndown 7\ndown 8\nup 2\ndown 9\ndown 2\nforward 3\nforward 6\nforward 5\nforward 2\nforward 6\ndown 4\nforward 5\nup 5\nforward 3\ndown 4\nforward 3\ndown 4\nforward 9\nforward 7\nforward 9\nforward 7\nup 4\ndown 3\nforward 5\nforward 9\nforward 9\ndown 5\nforward 9\ndown 1\ndown 3\nforward 2\nforward 5\nforward 8\ndown 6\ndown 4\nforward 1\nup 6\ndown 8\nup 4\nup 8\nforward 3\ndown 3\ndown 2\nforward 3\nforward 4\ndown 9\ndown 4\nforward 6\nup 5\nforward 6\nup 1\ndown 3\nforward 9\ndown 5\ndown 4\nforward 9\nup 6\nforward 9\nforward 2\ndown 1\nforward 7\nforward 5\ndown 4\nforward 6\ndown 6\nup 3\nup 8\ndown 6\nforward 8\nforward 3\ndown 6\ndown 3\ndown 3\nup 6\nup 6\nup 1\nforward 7\nup 2\nforward 5\nforward 5\nup 3\nforward 7\nup 3\ndown 7\ndown 1\nforward 9\nforward 7\ndown 1\nforward 7\nforward 8\nforward 2\ndown 1\nup 3\ndown 6\nforward 5\nforward 4\nforward 2\ndown 8\nforward 3\ndown 9\ndown 4\nup 9\ndown 2\ndown 6\nup 2\nup 9\nforward 1\ndown 8\nforward 3\ndown 4\ndown 2\nforward 9\nforward 2\ndown 3\ndown 8\ndown 7\ndown 7\nup 2\ndown 7\ndown 2\ndown 4\nforward 8\nforward 1\ndown 5\nforward 2\nforward 1\nforward 6\ndown 7\nforward 1\ndown 4\nforward 1\nup 7\ndown 7\nforward 2\ndown 4\nforward 9\nup 1\nforward 7\nforward 3\nforward 3\ndown 2\ndown 6\nup 1\ndown 1\ndown 7\nforward 2\nforward 6\ndown 5\nup 4\ndown 9\nup 6\nforward 1\nforward 4\ndown 9\nup 7\ndown 8\nup 6\ndown 8\ndown 5\ndown 5\ndown 2\nforward 7\nforward 2\nup 2\nup 9\nforward 6\ndown 9\ndown 6\nforward 3\ndown 8\nforward 3\nforward 2\ndown 9\nforward 5\nup 3\nforward 5\ndown 1\nup 1\ndown 3\nforward 1\nforward 5\ndown 7\nforward 8\nforward 6\ndown 4\ndown 9\nforward 5\nforward 2\ndown 8\ndown 3\ndown 6\ndown 2\ndown 1\nforward 6\nforward 1\nforward 6\nup 9\ndown 4\nup 7\nforward 5\nup 6\ndown 3\nforward 6\nforward 3\nforward 2\nforward 2\nup 1\ndown 9\nforward 2\nforward 3\nup 1\nforward 3\nforward 2\ndown 4\ndown 8\nup 9\nup 1\nforward 4\nup 2\ndown 6\nforward 3\ndown 5\nup 5\nup 7\ndown 1\nforward 1\nforward 7\ndown 4\nforward 4\nforward 2\nforward 8\ndown 7\ndown 8\ndown 8\nforward 5\nforward 8\ndown 5\nforward 3\ndown 3\ndown 1\nforward 2\nforward 7\nforward 2\nforward 6\nforward 3\nforward 7\nup 6\ndown 5\nforward 6\ndown 5\ndown 7\nforward 6\nup 5\ndown 9\ndown 3\nforward 1\nforward 1\nforward 3\ndown 9\nforward 1\ndown 9\ndown 9\ndown 4\ndown 2\ndown 5\nup 6\nforward 1\ndown 7\ndown 2\nforward 9\ndown 8\ndown 2\nforward 7\ndown 8\nforward 2\nup 8\nup 6\nforward 9\ndown 7\nforward 1\ndown 4\ndown 7\nforward 1\nforward 4\ndown 1\nforward 9\ndown 1\nup 2\nup 4\nforward 3\ndown 4\nforward 7\nforward 1\nup 7\nup 4\nforward 7\nforward 2\nforward 5\ndown 7\ndown 9\nforward 4\nforward 6\ndown 9\nforward 6\nup 8\nforward 3\nforward 2\nforward 3\nforward 9\ndown 7\ndown 4\ndown 7\ndown 7\ndown 5\nforward 7\ndown 1\nforward 3\nup 3\ndown 1\nup 7\nup 7\nup 4\nforward 9\ndown 8\nup 4\nforward 6\nforward 8\ndown 8\nforward 1\ndown 6\nforward 1\nforward 4\nup 8\nforward 3\nup 6\nup 1\ndown 4\nup 1\nforward 8\nup 1\nforward 7\ndown 1\nup 9\ndown 3\nforward 4\ndown 6\ndown 7\nforward 7\nforward 4\ndown 1\nup 3\nforward 3\nup 7\nup 9\nup 9\nforward 7\ndown 8\nforward 5\nup 2\nforward 7\nforward 8\ndown 2\ndown 6\ndown 1\ndown 1\ndown 5\ndown 5\nup 5\nforward 1\nforward 3\ndown 9\ndown 6\nforward 9\nforward 1\ndown 4\nforward 7\nforward 6\nup 4\ndown 8\ndown 9\nforward 3\ndown 9\nup 5\nforward 3\nup 1\nforward 3\nforward 1\nforward 8\nup 6\ndown 6\nforward 9\nforward 7\nforward 8\ndown 1\nforward 9\nforward 1\nforward 3\nforward 6\ndown 1\ndown 9\ndown 9\nforward 1\ndown 2\ndown 5\nforward 7\nforward 6\ndown 5\nforward 8\nforward 1\nforward 5\nforward 6\ndown 6\ndown 9\ndown 7\nforward 7\ndown 2\ndown 2\nup 2\nforward 9\nforward 4\nforward 2\nup 9\nforward 3\nforward 1\nforward 6\ndown 4\ndown 9\ndown 9\ndown 1\ndown 3\ndown 1\nforward 5\ndown 7\nforward 9\nforward 7\nforward 4\nforward 7\nforward 8\nforward 5\ndown 8\ndown 1\nup 1\nforward 9\nforward 9\ndown 4\nup 7\nup 3\ndown 1\nforward 5\nforward 2\ndown 6\ndown 6\nup 3\ndown 6\nup 7\nforward 2\nforward 2\nforward 8\ndown 3\nup 5\ndown 4\nforward 5\ndown 4\nforward 8\ndown 5\ndown 2\nforward 6\ndown 2\ndown 3\ndown 5\nup 6\ndown 7\nforward 6\nforward 2\ndown 8\nup 1\nup 1\nforward 2\ndown 3\nforward 3\ndown 8\ndown 4\nforward 1\ndown 2\nforward 6\nup 3\nforward 8\ndown 6\nup 7\nforward 2\nforward 9\nforward 4\nforward 4\nup 7\nforward 6\nup 1\nforward 1\nforward 3\ndown 4\nup 7\nforward 8\nforward 4\ndown 8\nforward 4\ndown 8\nforward 9\ndown 3\ndown 4\nup 6\nup 1\nforward 7\nup 3\nforward 5\nforward 4\nforward 5\nforward 7\nforward 1\ndown 3\nup 5\nforward 7\nforward 4\ndown 9\ndown 6\ndown 7\nup 3\nup 7\nup 8\nup 9\ndown 4\nup 1\nforward 1\nup 3\nforward 6\ndown 8\nforward 4\ndown 7\ndown 5\ndown 4\nforward 7\nforward 5\ndown 4\ndown 7\nup 5\ndown 2\ndown 1\ndown 8\nforward 7\ndown 4\nforward 5\nup 9\ndown 3\nup 2\ndown 3\nforward 2\nforward 2\nforward 8\ndown 2\ndown 3\nforward 2\ndown 6\nforward 9\ndown 6\ndown 1\ndown 8\ndown 3\nforward 4\nforward 4\nforward 4\nup 8\nforward 8\nup 4\ndown 1\nforward 5\ndown 9\nforward 7\nup 9\nup 3\ndown 9\ndown 8\nforward 3\nforward 4\nforward 5\nforward 4\nup 7\ndown 2\nup 5\nforward 6\ndown 3\nforward 6\ndown 8\ndown 3\ndown 3\ndown 4\nforward 8\ndown 9\ndown 2\nforward 2\ndown 7\nforward 3\nup 2\nforward 4\ndown 8\nforward 2\nforward 9\nforward 3\ndown 6\nforward 9\ndown 7\nforward 1\nforward 2\nforward 4\nforward 4\nup 4\nup 2\ndown 7\nforward 9\nforward 9\nforward 7\nup 7\ndown 2\ndown 9\nforward 8\ndown 5\nup 2\ndown 6\nforward 9\nup 3\ndown 5\ndown 4\nforward 9\nforward 3\ndown 6\ndown 8\nup 5\nup 3\ndown 2\nforward 9\ndown 3\nforward 6\ndown 9\nforward 5\ndown 6\nup 6\ndown 6\nforward 6\nforward 1\ndown 3\ndown 3\nup 8\nforward 1\nforward 4\nup 2\nforward 3\nforward 1\nforward 8\nforward 7\ndown 7\ndown 4\ndown 6\ndown 2\nforward 3\ndown 2\nforward 6\nup 3\ndown 9\ndown 2\nforward 6\ndown 6\nforward 5\nforward 2\nup 4\nforward 5\nup 5\nup 5\nup 3\nforward 9\ndown 7\nforward 4\ndown 7\nup 5\ndown 3\nforward 5\nforward 3\ndown 7\nup 2\ndown 5\nforward 9\nforward 7\nup 7\nforward 5\nup 5\ndown 1\nup 7\nforward 9\ndown 8\nforward 2\nforward 8\ndown 7\ndown 3\ndown 1\nup 7\nforward 4\ndown 3\nforward 1\nforward 1\nforward 6\nup 7\nup 1\nforward 2\ndown 8\ndown 4\ndown 2\ndown 6\nforward 5\ndown 7\ndown 8\ndown 7\ndown 5\ndown 5\nforward 1\ndown 9\nforward 5\ndown 6\ndown 9\nup 3\ndown 4\nforward 3\ndown 6\nup 6\nforward 8\nforward 8\nforward 2\ndown 2\nup 1\nforward 6\nforward 6\nup 9\nup 4\nforward 9\nup 7\nup 6\ndown 2\ndown 3\nup 7\ndown 7\nforward 4\nforward 8\ndown 3\nforward 1\ndown 2\nforward 9\nforward 4\nforward 6\ndown 7\nup 9\nforward 9\nforward 1\nforward 2\ndown 1\ndown 8\ndown 7\nforward 3\ndown 4\ndown 9\nforward 2\nup 2\nforward 3\nup 3\ndown 9\ndown 2\nforward 3\ndown 3\nforward 7\nforward 6\ndown 6\ndown 7\nforward 2\ndown 9\nup 3\ndown 6\nforward 3\ndown 2\ndown 1\nup 6\ndown 3\ndown 3\ndown 1\ndown 5\ndown 3\nup 4\ndown 2\nforward 5\ndown 2\ndown 8\ndown 2\ndown 5\nforward 9\nforward 4\ndown 4\ndown 2\ndown 8\nforward 9\ndown 8\nforward 1\nup 6\nforward 6\ndown 7\ndown 1\ndown 2\ndown 8\ndown 8\nup 8\nforward 6\nforward 8\nforward 9\nforward 2\nforward 5`\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\nimport './submarine.css'\n\nconst Day2 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([])\n  const [prepData, setPrepData] = React.useState([])\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n  const [showAnimate, setShowAnimate] = React.useState(false)\n\n  const subRef = React.useRef()\n  const [subX, setSubX] = React.useState(0)\n  const [subY, setSubY] = React.useState(0)\n\n  const animate = () => {\n    setShowAnimate(true)\n    let top = 170\n    let left = 0\n    const xRatio = (window.innerWidth - subRef.current.offsetWidth - left) / totalX;\n    const yRatio = (window.innerHeight - subRef.current.offsetHeight - top) / (totalY * -1);\n    subRef.current.style.top = `${top}px`\n    subRef.current.style.left = `${left}px`\n    let counter = 0\n    const moveSubmarine = () => {\n      if (counter < prepData.length) {\n        setTimeout(() => {\n          const p = prepData[counter]\n          setSubX(x => x + p.x)\n          setSubY(y => y + p.y)\n          top += p.y * -1 * yRatio\n          left += p.x * xRatio\n          subRef.current.style.top = `${top}px`\n          subRef.current.style.left = `${left}px`\n          counter += 1\n          moveSubmarine()\n        }, 30)\n      }\n    }\n    moveSubmarine()\n  }\n  // prep the data so we can use it\n  React.useEffect(() => {\n    const _input = input1.split('\\n').map(v => v.trim())\n    setPuzzleInput(_input)\n    const _prepData = _input.map(p => {\n      // expecting a 'direction #' format\n      const [ , direction, distance ] = p.match(/([a-z]*)\\s([0-9]*)/) // get the direction and the distance from the value\n      console.log(direction, distance)\n      switch (direction) { // translate the direction to the X or Y values\n        case 'forward':\n          return {\n            x: parseInt(distance),\n            y: 0\n          }\n        case 'backward':\n          return {\n            x: parseInt(distance) * -1,\n            y: 0\n          }\n        case 'up':\n          return {\n            x: 0,\n            y: parseInt(distance)\n          }\n        case 'down':\n          return {\n            x: 0,\n            y: parseInt(distance) * -1\n          }\n        default:\n          return {}\n      }\n    })\n    setPrepData(_prepData)\n  }, [])\n\n  // first challenge, where do they end up?\n  const [totalX, setTotalX] = React.useState(0) // starting at 0 horizontally\n  const [totalY, setTotalY] = React.useState(0) // starting at 0 depth\n  React.useEffect(() => {\n    if (prepData?.length > 0) {\n      let x = 0\n      let y = 0\n      prepData.forEach(p => {\n        x += p.x\n        y += p.y\n      })\n      setTotalX(x)\n      setTotalY(y)\n      setFirst(x * y * -1)\n    }\n  }, [prepData])\n\n  // second challenge, in addition to the location, we have to aim it as well\n  const [totalX2, setTotalX2] = React.useState(0) // starting at 0 horizontally\n  const [totalY2, setTotalY2] = React.useState(0) // starting at 0 depth\n  const [totalAim, setTotalAim] = React.useState(0) // starting aim at 0\n  React.useEffect(() => {\n    if (first && prepData?.length > 0) {\n      let x = 0\n      let y = 0\n      let aim = 0\n      prepData.forEach(p => {\n        x += p.x\n        aim += p.y * -1 // up/down opposite of what the data has been prepped above\n        if (p.x > 0) {\n          y += aim * p.x\n        }\n      })\n      setTotalAim(aim)\n      setTotalX2(x)\n      setTotalY2(y)\n      setSecond(x * y)\n    }\n  }, [first, prepData])\n\n  return (\n    <div>\n      <h2>Day 2 - Dive</h2>\n      <h2>Answer #1</h2>\n      {totalX} horizontal x {totalY} depth = {first}\n      <div>\n        {!showAnimate && <button onClick={animate} className=\"smaller\">animate</button>}\n        <div className=\"submarine\" ref={subRef} style={{ visibility: showAnimate ? 'visible' : 'hidden' }}>sub {subX}x{subY}</div>\n      </div>\n      <h2>Answer #2</h2>\n      {totalX2} horizontal x {totalY2} depth = {second} (with an aim of {totalAim})\n      <h3>Input: {puzzleInput.length} coordinates</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day2","const puzzle = `000110010001\n101000110000\n000110010111\n100011100010\n111001100001\n001010001010\n010100100101\n011000010000\n111111011010\n001111011101\n011011010010\n001100010101\n001010101100\n000000000000\n100010111111\n100100110011\n111100100001\n011110001110\n000110100101\n011101111001\n111101110110\n101001001111\n010111100010\n001110100011\n110010111101\n110000001101\n110110111101\n101100000110\n101101010110\n001011001110\n111110000111\n011110010110\n011001110100\n110101101110\n101110001100\n100111000010\n101111010001\n111110000101\n010100111111\n010110111011\n000000100101\n001000101011\n011100101110\n010011000100\n110011100001\n100100101110\n111101110011\n010100010010\n110100010000\n000101001101\n101010110100\n000011100110\n000100110100\n111001011001\n010101001110\n110100110100\n111010001010\n111111101111\n111000011001\n111110000000\n011111111011\n010100100001\n010110100100\n110000011110\n001100101101\n010011001000\n101110110110\n001001011011\n100100101101\n001111000100\n101001010000\n110101010010\n101111100101\n001011101010\n001110010111\n100111111000\n010010110110\n000100100010\n010111100100\n001000100001\n101100100111\n111001000001\n110010111100\n000110011101\n000001010010\n001010010111\n001101000100\n000110111101\n111011011000\n011110101000\n100101000011\n001000011100\n111101001001\n000011110011\n011010101001\n000111000101\n011000011001\n011010010100\n010110001110\n011010010110\n111010111110\n010101000010\n100010011100\n110001111100\n100101100001\n010001110010\n001000010011\n111010011101\n110001111000\n101100010011\n010000010110\n101011001101\n000110000101\n010000101111\n001100010100\n100110010111\n010000010001\n011100100101\n110011010000\n111101001110\n001101110010\n000011000110\n011000010111\n000101010000\n101111110110\n101001011000\n111010001000\n001100100010\n111100001100\n011000001100\n111010110100\n011111010110\n111011100000\n110010110110\n100111001101\n101111111010\n000101101110\n011011000111\n110001101100\n001110001110\n100100001011\n111000001110\n110000111111\n100110111111\n100100000011\n111101110001\n000100001111\n000101000111\n001011000111\n010011001100\n100001101110\n111100001010\n110100101101\n100111100001\n011000100111\n101010010010\n111101000111\n000010110101\n001100010010\n001111111101\n001101111011\n001011101110\n011100000111\n110010111111\n100110110101\n100110000001\n001011100010\n100010111000\n000000111000\n111010100100\n010101101110\n100111011111\n111101010100\n010000111011\n000101100001\n101010100000\n101110111100\n010000011011\n000101110110\n100110000000\n001001001001\n110110101100\n001100110011\n100111001111\n110111011101\n001110110010\n001010110000\n001001100101\n111100101101\n100001111100\n011001011110\n010010100010\n001011100100\n000100111010\n010110011100\n011100000101\n001110101010\n010011101010\n000011010001\n011101101100\n110100101001\n101011110110\n001010010101\n111110011010\n011001101111\n001000111111\n000011101101\n010001001001\n111011000010\n001011110010\n010000011001\n110000110001\n011001001000\n110011011000\n110101011001\n100000100011\n010011001111\n100100101000\n111111111100\n011011010101\n101100101010\n111110011111\n010101001000\n011110100000\n101001111111\n110000101110\n101011101110\n101111001110\n100000101101\n010010001011\n010100110111\n111011110001\n000100000010\n100000111000\n111111111000\n110111100111\n000001101101\n100001110011\n011010111110\n100111111100\n111111001010\n001001000100\n010010101101\n110100100000\n100010011111\n010000000110\n110111010111\n101000001000\n100100101001\n001001000010\n001111111010\n001011011000\n100010001111\n110011101110\n010111001110\n001011010011\n111011011011\n010100100100\n101011000111\n000011111111\n000110000111\n110000110100\n100101011011\n001001110110\n011100001001\n001111110100\n001111001101\n110010011001\n000100001001\n000110010110\n100001001010\n011100111000\n011101010111\n011111000110\n001000001001\n110011000101\n111111011011\n111110010011\n101111100000\n101011000100\n111110011101\n010100101010\n101011110000\n000100010100\n110110010010\n100011001101\n110110011010\n011100111011\n001111100001\n110011100101\n111001101011\n010000110101\n100100011100\n111000111001\n111000001011\n010110100011\n110011010100\n010011101111\n011011110111\n010101101010\n000000100100\n100111011101\n001101011000\n110111000101\n001011110100\n001100000100\n101010110010\n011000100000\n011001010100\n111100000000\n000100011000\n001000111000\n101101110010\n000100011001\n000100101001\n010010010101\n100010101101\n100010010110\n110101110000\n100011100110\n010010011100\n010001011011\n011100000110\n101000101011\n111010010000\n011100111001\n100001100110\n111100000110\n100001011100\n111001110101\n111011100111\n110101010001\n111100011000\n100111101010\n011110110000\n001011000101\n011010011111\n111100111110\n010100011010\n000010011101\n000110000110\n011001010001\n111000011100\n000111010110\n000000110101\n010011101011\n110011001110\n011011110110\n101100010101\n000011011001\n001100101011\n101000010101\n101100011010\n000111111110\n000011001001\n111011101110\n100111111010\n000101000011\n111100010011\n010001101010\n101001011110\n110010110000\n110101101001\n000011101110\n101101001010\n110100001101\n011100000011\n100011100101\n111010100110\n100010110001\n001011010000\n001001010100\n100101110100\n100100001111\n001000001010\n111001000101\n110110100000\n001010100010\n100100001110\n100111010010\n010110111000\n010100001010\n000010101100\n001010111100\n001111101001\n101011111101\n011011001001\n101000100110\n001010011101\n001011110000\n111110100000\n101100111010\n101111010111\n011000000101\n101100000010\n010101111110\n000011011100\n111110111010\n011110101110\n111011100010\n111100010001\n100000100110\n010111010000\n100010100101\n010111101010\n011011111111\n110111101000\n100000010000\n001011000010\n001001100011\n001000100110\n001001001011\n011110101101\n010111111101\n100100111100\n000011001101\n010101100000\n111100011100\n010111001010\n001101010011\n111011101111\n000000111101\n100000110110\n010000001101\n011110001011\n111100111100\n100101111110\n001000110010\n101011010000\n000101001111\n100001101101\n011011110001\n010010110010\n111011110111\n000001110110\n100110011110\n101100110011\n011011011010\n100100101010\n011011000110\n000100100011\n100101101001\n100110110000\n100100011001\n001010010001\n000001011101\n010011011010\n010101100101\n111101111011\n010100111011\n111000001001\n101100110101\n011111101010\n111110110111\n111111110000\n011001001100\n110001100100\n001000000011\n000110001010\n111000010100\n010101000000\n101001100000\n001010010010\n010001100000\n001000101110\n110111100001\n001111000010\n100111111101\n010111101110\n000110000011\n011100111101\n000011001111\n011101100110\n011110111110\n000010001010\n111101001100\n101101110011\n001000101111\n001011001000\n010110100101\n000110110010\n101101001000\n010100100000\n001111011110\n111001111111\n110010011101\n011010110001\n101101111010\n011000110110\n011101011111\n000011000111\n011010101101\n010000100110\n111001101110\n100001110100\n111100110110\n000001101011\n011111000011\n010001011001\n101010001000\n001100111001\n101111111111\n100000001101\n110011000000\n111000101011\n110001010110\n011100010001\n110110100110\n000010010100\n000001000101\n110111101011\n101110011011\n010010111000\n110000101101\n110100011101\n000111110001\n110001001010\n011000111110\n100111010110\n111100111000\n000010101001\n111100100101\n100110111001\n001001010000\n101110000010\n110011110101\n100010011101\n011000100101\n101011001000\n100111011000\n110101011111\n111100010110\n111001100110\n001110001000\n110110101001\n111001011010\n101011100101\n001101100001\n000111000110\n110001110110\n111100101011\n100010100100\n000101110001\n011101001000\n001110001100\n100100001010\n101010101111\n100011010011\n010001111101\n100101001001\n111110101111\n010011000101\n000110111011\n101101100011\n000110110110\n100000110000\n000001000001\n011111010111\n111110010101\n111101011011\n101011110111\n001000011111\n010010010000\n110110110010\n000110100000\n010010110101\n110110001111\n101111101000\n110101110101\n001100111110\n100101101110\n101111110101\n000111101001\n001011011111\n111011001011\n001001101100\n010101111010\n111110001100\n100010111100\n011000110111\n111111101100\n101001100001\n110000110111\n100010101000\n010010100011\n101110011001\n011101001001\n110000000110\n000110000010\n000111111101\n110001001100\n001001101010\n101010011010\n101100111101\n110010100010\n000101110101\n000000010101\n101010110000\n101010110001\n101001001100\n010001101110\n010011111001\n010010111011\n001110110101\n101000000110\n101110000101\n110110001101\n101000100000\n011001100110\n101111100110\n111110001010\n110010101011\n100111000111\n111001111101\n100001011111\n101101101110\n010100100010\n111100111011\n001011100110\n000001011010\n101111100010\n110000000000\n111100010101\n110100001001\n100010011010\n111000110010\n101000110011\n111101011111\n100011111011\n101001100111\n011011111101\n111011010111\n011101010011\n010010000111\n110011111101\n011101011101\n010101100111\n010111000000\n100111000001\n001110101101\n000111101110\n000100110000\n001110110111\n010000111010\n001010001001\n101001000111\n111010100010\n110001000011\n011111010000\n000110010000\n001001011111\n000100011111\n110001010011\n110000010011\n000011010101\n100101001110\n101110010101\n000011110000\n011111100111\n001111101100\n101111101100\n101110111101\n110111111001\n011110111101\n111110010111\n101110100001\n000110100010\n011000001000\n111000110101\n101000011100\n100110010100\n001111111111\n111001111001\n111111000110\n000110100100\n111000110000\n110011010110\n001010011001\n101000011011\n100011111111\n011001100000\n110100101100\n001001111000\n000100001100\n010101000001\n101010110111\n100110100000\n100110000011\n111101000011\n001101001010\n000000011111\n000101000110\n001110111001\n101110001011\n001111011010\n000100110010\n010011011001\n011100101001\n010110011001\n001011001101\n011110100010\n011000011100\n001001110010\n100000000010\n010111010010\n000010100000\n011000011110\n010100110010\n010101010001\n011010101100\n000100100001\n110101001011\n111110111101\n010100100110\n110010000100\n000101010001\n110100000001\n001010100011\n011101100101\n010101011110\n010101110101\n010101011100\n010011001010\n010011110001\n111111100000\n011110111010\n110010101010\n001111010001\n111110111110\n110001010101\n001011010001\n110111000110\n000011010011\n000001101001\n011010100100\n100000010111\n000000100001\n110000110010\n001101111101\n101011111111\n100100100010\n000001110111\n001111110101\n001111000011\n101000111100\n100100101111\n111000000101\n000011100011\n110101100010\n110001010111\n011000111100\n010000011111\n000001011000\n110011100000\n111100100111\n000010001011\n100111101001\n011111100000\n101101111001\n101100101100\n001000110100\n111111010111\n000110001101\n011111100001\n111000001100\n000111100100\n001111000000\n000101110010\n101100011001\n000001000100\n001001001101\n111001010101\n000011111011\n011111110000\n000000110001\n100111110011\n101001001011\n101000110110\n111001010100\n000011110100\n010001100001\n001111001110\n100001101001\n000001101111\n101000000001\n111101010000\n011111011001\n111111011110\n110110010110\n001011101100\n100001010111\n101011011100\n110010101001\n001000001100\n001101010101\n111111111110\n001100100011\n110000110110\n000000000110\n101000001010\n001111001100\n100011110001\n111011000001\n011010100110\n011110100100\n001110011111\n010101101011\n010110010111\n101100110110\n000101100010\n110010010000\n010100010000\n111011000111\n011010111011\n100000100111\n001111011000\n001010111011\n000010111111\n110001000101\n000111010101\n010011110111\n111010110000\n100111110110\n101011010001\n011001111111\n110110100010\n110111110110\n011010110111\n111000100011\n100010011000\n111001000010\n000100000111\n011101001010\n111001000111\n000110010100\n011011010110\n100100110100\n010011000001\n101000111011\n100100000000\n010010101110\n011111001101\n001100001100\n010111100001\n100101101010\n100110001101\n010111000101\n010100011011\n000010000011\n111000111111\n100111011100\n111110011011\n011110110110\n001000001111\n100110110111\n100000001011\n001111001011\n010010111101\n010001111000\n110010110101\n011001100101\n100110001111\n110001101010\n000100101011\n101110111010\n011111100011\n101010111111\n011101100001\n100000001010\n010000001000\n110110001010\n110001010010\n101001111001\n000100001101\n111100001111\n111101000110\n001010111001\n000101011010\n101001010010\n101011110001\n011011110101\n110101110100\n000001111001\n111000001111\n101110110000\n001101110101\n011010110010\n101000001110\n100011111001\n000111011101\n110011010101\n010111101101\n000010111011\n000100101010\n100101100101\n100000011001\n010110110100\n011010100000\n010100010001\n110010100101\n010100111110\n011100011101\n100011110010\n101000000010\n011001100001\n111111100100\n010011000011\n001101010010\n111100100000\n110101101111\n101001110001\n101100111111\n010111110010\n100011000100\n101101001101\n000000101001\n110100110000\n000110010010\n100111001110\n110011100110\n010110100010\n000111010100\n001101000001\n111010000011\n011001010110\n101000100010\n111010001001\n010101100001\n011001110010\n000111000111\n110001010001\n000111010001\n000001111100\n010001000001\n100110000010\n111111000111\n110111001111\n010010001001\n001001101111\n000110101111\n110011011111\n100010100111\n001010000010\n000000110110\n111111111101\n011111101111\n100111101111\n111111110111\n101111011001\n111010111011\n001001111110\n000010001100\n111011001111\n111111100011\n100010010011\n101110101011\n111010111111\n001111000110\n110000001100\n100110100110\n001110001101\n001000111100\n010011000110\n011011011100\n110110011001\n001000111010\n101100000011\n110100111101\n011100001011\n011101000100\n011100010011\n101001000001\n000001101010\n110000001010\n010100010100\n101001100110\n000100100101\n001000111101\n101101011111\n011001000010\n101000100001\n111110100011\n111101010010\n110111010101\n010111110100\n010001010001\n010110011110\n101001010001\n100110111100\n110011100010\n010110001011\n110001001101\n001100100111\n001001001111\n011000110100\n000010010001\n101010101110\n111100111111\n000010100010\n011010111101`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day3 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [gammaBinary, setGammaBinary] = React.useState('')\n  const [gammaRate, setGammaRate] = React.useState(0)\n  const [epsilonBinary, setEpsilonBinary] = React.useState('')\n  const [epsilonRate, setEpsilonRate] = React.useState(0)\n  const [first, setFirst] = React.useState()\n\n  const [oxygenBinary, setOxygenBinary] = React.useState('')\n  const [co2Binary, setCO2Binary] = React.useState('')\n  const [oxygenRating, setOxygenRating] = React.useState(0)\n  const [co2Rating, setCO2Rating] = React.useState(0)\n  const [second, setSecond] = React.useState()\n\n  const getBinaries = (binaryArray) => {\n    const counts = new Map()\n    binaryArray.forEach(p => { // loop through and add the numbers, this will give us the count of 1s in each position\n      const bits = p.split(\"\");\n      bits.forEach((b, indx) => {\n        const bNum = parseInt(b)\n        if (counts.has(indx)) {\n          counts.set(indx, counts.get(indx) + bNum)\n        } else {\n          counts.set(indx, bNum)\n        }\n      })\n    })\n    console.log(counts)\n    const totalNums = binaryArray.length\n    let _gammaRate = ''\n    let _epsilonRate = ''\n    // determine the common and least common bits, minus the count of ones from the length to get the count of 0s\n    counts.forEach((value, key) => {\n      if (totalNums - value > value) {\n        _gammaRate += '0'\n        _epsilonRate += '1'\n      } else {\n        _gammaRate += '1'\n        _epsilonRate += '0'\n      }\n    })\n\n    return [_gammaRate, _epsilonRate]\n  }\n  // get the input into a usable array\n  React.useEffect(() => {\n   setPuzzleInput(input1.split('\\n').map(v => v.trim()))\n  }, [])\n\n  // first challenge, find the most common bits (gamma rate) and the least common bits (epsilon rate) to find the power consumption\n  React.useEffect(() => {\n    if (puzzleInput?.length > 0) {\n      const [_gammaRate, _epsilonRate] = getBinaries(puzzleInput)\n\n      setGammaBinary(_gammaRate) // this will be needed in the 2nd puzzle\n      setEpsilonBinary(_epsilonRate)\n\n      const _gamma = parseInt(_gammaRate, 2) // convert binary to decimal\n      const _epsilon = parseInt(_epsilonRate, 2) // convert binary to decimal\n      setGammaRate(_gamma)\n      setEpsilonRate(_epsilon)\n\n      setFirst(_gamma * _epsilon)\n    }\n  }, [puzzleInput])\n\n  // second challenge, find the most common value (oxygen generator rating) comparing each bit and filtering out the least common bit\n  // find the lease common value (CO2 scrubber rating) comparing each bit and filtering out the most common bit\n  React.useEffect(() => {\n    if (gammaBinary) {\n      console.warn('starting second challenge')\n\n      // find the oxygen generator rating\n      let oxyResults = [...puzzleInput]\n      let commonBits = gammaBinary\n      let bitIndex = 0\n      while (bitIndex < commonBits.length && oxyResults.length > 1) {\n        const bit = commonBits.substring(bitIndex, bitIndex + 1)\n        console.log(commonBits, bitIndex, bit)\n        oxyResults = oxyResults.filter(r => r.substring(bitIndex, bitIndex + 1) === bit)\n        console.log('found', oxyResults.length)\n        commonBits = getBinaries(oxyResults)[0]\n        bitIndex += 1\n      }\n      setOxygenBinary(oxyResults[0])\n      setOxygenRating(parseInt(oxyResults[0], 2))\n     \n      // find the CO2 scrubber rating\n      let co2Results = [...puzzleInput]\n      commonBits = epsilonBinary\n      bitIndex = 0\n      while (bitIndex < commonBits.length && co2Results.length > 1) {\n        const bit = commonBits.substring(bitIndex, bitIndex + 1)\n        console.log(commonBits, bitIndex, bit)\n        co2Results = co2Results.filter(r => r.substring(bitIndex, bitIndex + 1) === bit)\n        console.log('found', co2Results.length)\n        commonBits = getBinaries(co2Results)[1]\n        bitIndex += 1\n      }\n      setCO2Binary(co2Results[0])\n      setCO2Rating(parseInt(co2Results[0], 2))\n\n      setSecond(parseInt(oxyResults[0], 2) * parseInt(co2Results[0], 2))\n    }\n  }, [gammaBinary, epsilonBinary, puzzleInput])\n\n  return (\n    <div>\n      <h2>Day 3 - Binary Diagnostic</h2>\n      <h2>Answer #1</h2>\n      {gammaRate} ({gammaBinary}) gamma rate x {epsilonRate} ({epsilonBinary}) epsilon rate = {first}\n      <h2>Answer #2</h2>\n      {oxygenRating} ({oxygenBinary}) oxygen generator rating x {co2Rating} ({co2Binary}) CO2 scrubber rating = {second}\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day3","const puzzle = `72,99,88,8,59,61,96,92,2,70,1,32,18,10,95,33,20,31,66,43,26,24,91,44,11,15,48,90,27,29,14,68,3,50,69,74,54,4,16,55,64,12,73,80,58,83,6,87,30,41,25,39,93,60,9,81,63,75,46,19,78,51,21,28,94,7,17,42,53,13,97,98,34,76,89,23,86,52,79,85,67,84,47,22,37,65,71,49,82,40,77,36,62,0,56,45,57,38,35,5\n\n91 60 70 64 83\n35 41 79 55 31\n 7 58 25  3 47\n 2 23 69 59 21\n11 22  8 87 90\n\n77 95 19 21 76\n93 92 62 35  3\n 4 29  7 41 45\n80 50 83 61 64\n39 32 91 56 48\n\n47 11 39 58 97\n63 51 40 74 71\n12 17 68 81 44\n64 85 20 84 80\n 0 77  5 18 50\n\n44 82 32  1 57\n98 88 33 83 85\n25 61 63 99 37\n 0 74  7 20 39\n71 72 22 80 28\n\n78 97  0 48 41\n56 51 62 58 90\n 8 44 98 46  1\n38 40 91 20 55\n88  2 32 86 14\n\n84 50 16 45 40\n 9 39 60 34 46\n57 20 12  3 36\n58 17 72 48 83\n73 85 49 67 66\n\n 4 30 73 83 57\n74 23 49 19 42\n72 65  8 99 13\n25  6 82 53 68\n20 86 46 48 50\n\n52 29 61 16 75\n36 19  2 82  9\n34 90 89 43 14\n69 66 20 21 11\n31 53 46 18 23\n\n37 76 34 79 99\n43  5 42 91 71\n47 54 19 82 81\n95 78 65 60 24\n32 94 92 27 66\n\n68 61 80 90 53\n33 17 52  0 23\n30 71  5 85 11\n27 39 41  6  9\n58 98  7 74 89\n\n31  5 55 67 51\n54 86 40 25 92\n91 62  9 94  7\n39  0 44 52 28\n12 17 26 46 32\n\n94 80 83 88 77\n65 71 31 86  0\n98 55 18 92 72\n 6 12 30 25 34\n67 53 14 20 47\n\n81 74 14 47  1\n83 82  4 89  8\n43 93 63 21 44\n92 61 25 77 97\n12 72 35 78 52\n\n26 39 13 37 46\n87  6 58 47 19\n24 35 45 95 52\n 5 27 42 96  0\n23 64  8 29 83\n\n53 58 18 96 93\n57 90 35 88 68\n91 89  7 80 47\n59 86 81 24 31\n43  8 66 17 94\n\n 0 97 91 67 90\n93 20 36  4 42\n43 64 28 94 34\n31  2  7 54 71\n18 35 76 86 16\n\n55 63 26 47  0\n 2 23 54 25 90\n36 13 85 31 15\n59 51 18 88 62\n44 69  9 81 58\n\n26 97 98 42 27\n 3 53 91 89 93\n87 57 12 18  5\n29 99 86 47 64\n 6 28 92 79 67\n\n 4 35 45 79 16\n33 95 99 80  9\n60 78 57 51 50\n27  5 48 21 46\n19 70 32 58 18\n\n94 82 61 66 31\n14 56 76 37 28\n42 81 50 10 40\n 2 98 47 29 62\n69 90 46 44 18\n\n87  3  8 50 17\n15 90 54 45 21\n 6 28 43 51 32\n97 84 69 30 38\n98 44 88 55 83\n\n34 19 27 43 92\n81 62 52 32 39\n50 29 83 25 82\n60 55 49 41 97\n75 94 22 69 66\n\n59 39 96 87 65\n33 18  4 71 15\n22 27 92  8 29\n19  5 32 85 45\n91 79 35  9  3\n\n41 53 51 68 85\n72 71 94 82 81\n60 38 13 16  7\n49 80 10  0 54\n20 39 59 64 99\n\n37 21 90 40 73\n85 75 16 34 99\n84 15 25 18 27\n77 32  0 76 36\n13 50 68 91 12\n\n24 26  0 14 12\n89  4 15 95 73\n54  2 55 84 42\n30 50 81 60 87\n37 94 71 91 53\n\n52  1 81 44 34\n27 60 36 19 69\n98 11 49 67 56\n77 72 40 48 66\n84  9 37 32 51\n\n58 15  7 36 55\n94 49 69 89 87\n79 70 30 77 19\n68 31 56 41 53\n47 85 74 54 46\n\n64 87 23 66  0\n29 98 72 82 80\n70 45 46 30 37\n53 54 33 86 76\n 6 75 71 68  2\n\n12 31 43 80 41\n37 15 13  2  3\n86 61  9 17 59\n55 68 72  8  1\n96 26 44 73 47\n\n67 39 95 84 10\n 5 88 13 81 99\n68 15 98  6 17\n47 85 74 32 97\n58  8 16 56 42\n\n82 31 42 84 17\n25 28  2  6 12\n78 57 16 97 18\n87 64 54 30 65\n 3 77 29 49 81\n\n24  1 43 89 46\n29 78 57 14 85\n 9 58 53 83 35\n96 42 62 68 74\n67  2 39 37 51\n\n72 26 46 52  3\n91 27 41 32 53\n25 36  7 63 22\n56 38 93 65  9\n95 19 77 64 44\n\n21 71 13 99 39\n47 17 80 85 64\n 5 18 48 27 81\n82 23 45 57 12\n83 55 26 31 32\n\n57 13 86 69 65\n42 76 35 18 39\n17 91 95 43  6\n55 97 22 54 14\n56  0  5 60 92\n\n87 12 46 42 35\n44  6 95 30 67\n51 21 68 37 59\n77 65 50 69 63\n33 56 24 57 28\n\n82 87 42 99 39\n38 55 74 28  6\n77 66  9 80 10\n47 90 32  3 98\n92 52  5 94 51\n\n16  1 87 57 66\n41 70 58 31  5\n71 88 17 42 76\n81 40 25 89 63\n92  4 61 77 64\n\n70 28 56 51 66\n44 60 25  0 45\n91 78 81 95 88\n75 43 57 67 32\n58 27 20 82 22\n\n16 98 82 79 90\n96  4 80 69 19\n 9 28 33 40 94\n 2 99 14 73 43\n76 68 74 42 30\n\n29 42 94 45  2\n25 81 46 54 26\n75 99 51 58 23\n76 72 71 64 63\n66 70 92 44 13\n\n 2 71 39 49 95\n19 84  1  7 96\n 9  6 60 93 78\n38 91 55 36 41\n64  3 10 20 74\n\n79 80 15 69 89\n36 76 83  7 72\n87 34 48  0 93\n 5 84 77 20 75\n46 27 11 55  3\n\n82 34  4 14 74\n40 39  7  6 95\n11 51 78 80 29\n97 81 38  9 71\n22 62 19 72 68\n\n54 70 90 43 98\n12 27 57 96 62\n32 76  0 86 42\n88 68 81 91 50\n10 94 18 71  2\n\n90 41 29 53 58\n59 62 14 85 66\n25 82 68 44 93\n73 32 76 67 18\n94 71 83 34 37\n\n 6 72 69 33 90\n87 60 66 85 16\n59 80 86 47 89\n32 98 17 29  5\n48 27 18 57 81\n\n10 22 98 86 82\n 8 66 71 14 93\n87 79 40 78 49\n84 63 17 54 94\n35 39 47  1 96\n\n58 60 52  6 86\n41 20 66 59  2\n92 79 88 40 71\n96  9 25 36 17\n91 32 43 38  8\n\n74  3 64 66 68\n69 37 22 76 33\n17 67 29 32 27\n63 49 46 21 60\n35 73  9 52 50\n\n 0 91  8 26  9\n 3 98 79 97  7\n37 61  1 60 47\n86 17 11 70 15\n66 53  2 90 54\n\n68 42  0 78 16\n83 88 21 87 12\n50  2 29 14 63\n72 90 81 71 91\n54 79 94 10  4\n\n28 63 97 31  4\n50 52 43 24 16\n36 77  0  9 75\n83 94 69 68 27\n93 82 42 56 34\n\n24 52 66 51 82\n50 30 34 93 67\n56 70 53 13 78\n 4 84 88 57 81\n80 74  5 95 98\n\n56 64 53 52 72\n51 48 50 60 49\n 8 46 84 95 43\n91 21  7 88 33\n94 57 80 25 54\n\n70 57 62 20 18\n86 45 41 76 32\n87 35 52  5  2\n16 77 25 39 22\n38 10  6 29 98\n\n89 54 57 80 65\n 0 38 94 15  6\n85 76 16 83 59\n92  5 53 14 95\n47 35 73 98 34\n\n64 24 90 71 69\n55 35 20 98 41\n94 70 10 73 16\n65 84 60  7 72\n83  2 22 78 99\n\n31 81 74 56 98\n13 97 95 49 67\n 9 47 42 99 60\n38 22 65 58 21\n82 45  2 28 68\n\n90 88 28 85 51\n23 93 13 55 50\n63 22  3 30 39\n 5 71 82 95 81\n57 76 12 92 56\n\n78 12 28  6 73\n59 24 43 29 31\n30 34 75 52 48\n62 57 23 74 50\n91 92  5 95 38\n\n95 88 13 22 10\n16  4 19 37 91\n50 52 60 46 77\n45 55 49 41 26\n21  7 67 48 18\n\n51 79 44 16 71\n 6 13 12 41 97\n50 25 19 63  4\n98  0 23 77 31\n27 57 52 99  3\n\n86 95  7 54 84\n50 33 48 16  9\n82 32 38  6 34\n43 80 27 37 11\n89 70 41 22 45\n\n24  3 47 68 35\n85 76  8 29  4\n 2 10  5 28 73\n92 89 50 25 56\n99 57 79 19 37\n\n 0 46 72  5 20\n62 28 24 53 44\n84 25 63 34  9\n75  1 65 59 10\n95 29 97 77 45\n\n87 90  1 17 67\n57 73 35 10 30\n65 14 46 60  6\n70 66 56 69 92\n 3 27 21 64 88\n\n20 58 53 29 66\n27  6 67 89 33\n88 60 79 69 97\n90  3 47 68 25\n48 59 42 98 39\n\n65 90 45 97 87\n75 98  7 58 42\n51  4 95 88 47\n94  6 11 53 63\n49 80  2 48 68\n\n 3 77 42 97 82\n70 58 81 18 47\n78 96 62 39 56\n22 87 71 31 94\n34 48 57 38 88\n\n70 36 65 33 45\n71  0 59 44  1\n42 37  7  5  9\n11 12 91 43 27\n60 21 57 61 99\n\n76 75 56 49  2\n36 57 39 64 77\n95 19 35 43 97\n82 34 50 44 55\n45 74 15 66 29\n\n 0 75  1 78 79\n13 37 48 27 14\n90 50 26 92 67\n89 62 87 69 33\n29 47  4  2 12\n\n74 42 24 86 61\n92 66  3 65 75\n 7  1 77 63 64\n39 91 87 28  5\n30 35 41 73 96\n\n 0 81 41 15 66\n62 19 86 31 40\n23 94 98 82 24\n61 99  1  5 60\n80 64 91 33 47\n\n16 61 56 77 57\n28 59 71 45 92\n53 20 35 66 73\n99  3 86 31 74\n94 69 84 96 90\n\n71 56 23 76 42\n90 44 58 27 15\n46 18 86 63 24\n69 49 82 38 43\n33 51 60 66 39\n\n75 78 38 25 76\n67  3 83 90 10\n40 89 47 23 88\n34 21 46 16 33\n 9 79 50  0 26\n\n81 75 80 23 41\n62  4 76  1 63\n56 39 57 28 61\n20  6 79 92 84\n88  3 90 16 12\n\n87 78  3 34 63\n98 21 24  9 99\n62 29 57 65 27\n47 52 67 76 71\n11 17 93 23 82\n\n53 68 70 38 56\n62 54 25 43 35\n 9  3 13 15 75\n59 27 26 33 83\n93 40 11 64 76\n\n27 83 26 48 77\n51 20 65 18 35\n80 30 60 44 89\n84 82 62 91 63\n12 97 11 19 34\n\n31 28 92 48 34\n 9 93 61 71 60\n52 18 97 81 62\n80 64 57 22 30\n11 88 74 29 56\n\n57 34 90 46 73\n31  0 70 66 82\n45 12 40 19 87\n91 24 59 83 14\n80 21 13 86 89\n\n 9  8 64 48 30\n 6 62 28 99 41\n79 45 83  7 55\n15 14 54 88 12\n90 74 97 96 50\n\n50 73 58 26 12\n96 98 56 34  7\n51 92 14 89 16\n41 70 80 55 13\n37 47  2 64 99\n\n98  9 70 17 18\n39 15 88 16 47\n80 41  8 51 21\n54 42 31 10 59\n37 92 33 62 68\n\n60 72 51 63 29\n83 39 41 24 14\n34  5 94 90 56\n75 80 67 17 20\n47 11 58 93 42\n\n97  7 27 42 67\n12 30 91 45 52\n62 50 87 92 71\n99 84 33  6 46\n29 55 86 47 60\n\n25 49 55 98 22\n66  9 61 59 90\n45 74 77 88  5\n 6 76  0 36 93\n23 70 33 95  2\n\n53 92 27 86 55\n66 52 26 58 38\n 2 78 69 62 65\n30  5  1 25 99\n76 43  4 13  8\n\n18 72 51 48 39\n62 19 28 44 82\n54 22 38 55 83\n86 93 42  9 32\n11 89 27 34 68\n\n85 99 35 88 76\n10 25 33 83 70\n54 81 77 73 66\n 4 74 96 41 86\n49  3 68 65 39\n\n71  0 70 14 31\n28 23 17 43 75\n13 40 38 87 97\n63 93 92 89 27\n58 76 24 53 54\n\n55 58 11 38 16\n98 86 13 12  8\n22 10 77 61 90\n37 76  2 62 45\n44 30 52 70 82\n\n89 55 12 90 63\n40 88 91 22 74\n 8  0 25  6 79\n53 23 87 77 20\n11 38 78 43 94\n\n21 14 37  8 16\n29 73 67 91 56\n 5 90 12 92 59\n64  1 42 72 94\n98 86 18 69 49\n\n79 71 82  1 77\n96 39 24 60 81\n49 16 12 63 14\n 0 32 78 37  8\n92 33 15 99 65\n\n54 11 40 55 33\n58 47  4 83 94\n46 96 16 28  5\n 0 62 95 71 39\n93 59  7 75 64`\n\nexport default puzzle;","import React from 'react';\n\nconst Board = ({ board, numbers, winningNumber }) => {\n  const [playedNumbers, setPlayedNumbers] = React.useState([])\n  const [currentNumber, setCurrentNumber] = React.useState()\n  const play = () => {\n    let counter = 0\n    const playGame = () => {\n      setTimeout(() => {\n        if (numbers[counter]) {\n          playedNumbers.push(numbers[counter])\n          setCurrentNumber(numbers[counter])\n          setPlayedNumbers(playedNumbers)\n          counter += 1\n          console.log('played', numbers[counter])\n          if (numbers[counter-1] !== winningNumber) {\n            playGame()\n          }\n        }\n      }, 500)\n    }\n    playGame()\n  }\n  return <div>\n    <button className=\"smaller\" onClick={play}>Play</button>\n    <div>\n      {currentNumber !== winningNumber && currentNumber}\n      {currentNumber === winningNumber && <span className='bingo'>Bingo!</span>}\n    </div>\n    <div className=\"board\">\n    <div className=\"title\">Bingo</div>\n    {board.rows.map(row => \n      <div className=\"row\">\n        {row.line.map(col => \n          <div className=\"col\">\n            <div className={`bingo-chip ${playedNumbers.some(n => n === col) ? 'match' : ''}`} />\n            {col}\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n  </div>\n}\n\nexport default Board","import React from 'react'\nimport input1 from './input1'\nimport Board from './board'\n\nimport './board.css'\n\nconst Day4 = () => {\n  const [bingoNumbers, setBingoNumbers] = React.useState([])\n  const [boards, setBoards] = React.useState([])\n  const [winningBoard, setWinningBoard] = React.useState(null)\n  const [lastBoard, setLastBoard] = React.useState(null)\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n  const [firstWinningNumber, setFirstWinningNumber] = React.useState(0)\n  const [secondWinningNumber, setSecondWinningNumber] = React.useState(0)\n\n  // get the input into boards\n  React.useEffect(() => {\n    const lines = input1.split('\\n').map(v => v.trim())\n    setBingoNumbers(lines.shift().split(',').map(v => parseInt(v))) // shift pulls the first row out of the array\n    const _boards = []\n    let board = { matchValue: 0, totalValue: 0, rows: [], columns: [], winning: false }\n    lines.forEach((line, index) => {\n      if (line.length === 0) { // line is empty, that ends this board\n        if (board.rows.length > 0) {\n          _boards.push(board)\n        }\n        board = { matchValue: 0, totalValue: 0, rows: [], columns: [], winning: false }\n      } else {\n        const rowVals = line.split(' ').filter(l => l).map(v => parseInt(v))\n        const rowSum = rowVals.reduce((a, b) => a + b, 0)\n        board.totalValue += rowSum // get the total value as we increment throw lines\n        board.rows.push({ match: 0, line: rowVals })\n        line\n          .split(\" \")\n          .filter(a => a) // filter out empties, since there are multiple spaces in the lines\n          .forEach((col, idx) => {\n            const colNum = parseInt(col)\n            if (board.columns[idx]) { // if the column exists on this board, append the column value to it\n              board.columns[idx].line.push(colNum)\n            } else { //column doesn't exist so create it\n              board.columns[idx] =  { match: 0, line: [colNum] }\n            }\n        })\n      }\n    })\n    _boards.push(board) // push the last one in\n\n    console.log(_boards)\n    setBoards(_boards)\n  }, [])\n\n  const deepClone = (obj) => {\n    const str = JSON.stringify(obj)\n    return JSON.parse(str)\n  }\n  // first challenge, find the winning board\n  React.useEffect(() => {\n    if (boards.length > 0) {\n      console.warn('First Challenge')\n      let _winningBoard = {}\n      // let _winningBoard = {}\n      const _boards = deepClone(boards)\n      const _winningNum = bingoNumbers.find(num => {\n        console.log('Number', num)\n        return _boards.find(board => {\n          let retVal = board.rows.find(row => {\n            if (row.line.some(c => c === num)) {\n              row.match += 1\n              board.matchValue += num // collecting the matched values\n              if (row.match === row.line.length) {\n                console.log('WINNING ROW', row, board, num)\n                _winningBoard = board\n                return num\n              }\n            }\n            return null\n          })\n          if (!retVal) {\n            retVal = board.columns.find(col => {\n              if (col.line.some(c => c === num)) {\n                col.match += 1\n                if (col.match === col.line.length) {\n                  console.log('WINNING COLUMN', col, board, num)\n                  _winningBoard = board\n                  return num\n                }\n              }\n            return null\n            })\n          }\n          return retVal\n        })\n      })\n      console.log('WINNER WINNER CHICKEN DINNER', _winningBoard)\n      const unmarkedTotal = _winningBoard.totalValue - _winningBoard.matchValue\n      console.log('unmarked total', unmarkedTotal)\n      setFirst(unmarkedTotal * _winningNum)\n      setWinningBoard(_winningBoard)\n      setFirstWinningNumber(_winningNum)\n    }\n  }, [bingoNumbers, boards])\n\n\n  // second challenge, find the last winning board\n  React.useEffect(() => {\n    if (first && boards.length > 0) {\n      console.warn('Second Challenge')\n      let _winningBoard = {}\n      const _boards = deepClone(boards)\n      const _winningNum = bingoNumbers.find(num => {\n        console.log('Number', num)\n        console.log('remaining boards', _boards.filter(b => !b.winning).length)\n        return _boards.filter(b => !b.winning).find(board => {\n          let retVal = board.rows.find(row => {\n            if (row.line.some(c => c === num)) {\n              row.match += 1\n              board.matchValue += num // collecting the matched values\n              if (row.match === row.line.length) {\n                console.log('WINNING ROW', row, board, num)\n                if (_boards.filter(b => !b.winning).length === 1) { // last winning board!\n                  _winningBoard = board\n                  return num\n                }\n                board.winning = true\n              }\n            }\n            return null\n          })\n          if (!retVal) {\n            retVal = board.columns.find(col => {\n              if (col.line.some(c => c === num)) {\n                col.match += 1\n                if (col.match === col.line.length) {\n                  console.log('WINNING COLUMN', col, board, num)\n                  if (_boards.filter(b => !b.winning).length === 1) {\n                    _winningBoard = board\n                    return num\n                  }\n                  board.winning = true\n                }\n              }\n              return null\n            })\n          }\n          return retVal\n        })\n      })\n      console.log('WINNER WINNER CHICKEN DINNER', _winningBoard)\n      const unmarkedTotal = _winningBoard.totalValue - _winningBoard.matchValue\n      setLastBoard(_winningBoard)\n      setSecond(unmarkedTotal * _winningNum)\n      setSecondWinningNumber(_winningNum)\n    }\n  }, [first, bingoNumbers, boards])\n\n  return (\n    <div className=\"day\">\n      <h2>Day 4 - Giant Squid</h2>\n      <h2>Answer #1</h2>\n      {first} Winning Board Final Score\n      {winningBoard && <Board board={winningBoard} numbers={bingoNumbers} winningNumber={firstWinningNumber} />}\n      <h2>Answer #2</h2>\n      {second} Last Winning Board Final Score\n      {lastBoard && <Board board={lastBoard} numbers={bingoNumbers} winningNumber={secondWinningNumber} />}\n      <h3>Input: {input1.length} lines</h3>\n      <div dangerouslySetInnerHTML={{ __html: input1.split('\\n').join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day4","const puzzle = `445,187 -> 912,654\n820,46 -> 25,841\n216,621 -> 458,379\n955,898 -> 67,10\n549,572 -> 549,520\n796,107 -> 109,794\n729,698 -> 338,698\n11,987 -> 968,30\n381,840 -> 381,409\n80,467 -> 80,48\n132,197 -> 132,92\n343,96 -> 343,710\n42,854 -> 346,550\n503,56 -> 804,56\n599,206 -> 60,206\n702,920 -> 474,920\n496,790 -> 223,517\n969,579 -> 583,579\n897,66 -> 604,66\n484,754 -> 640,910\n330,49 -> 949,49\n908,132 -> 714,132\n517,153 -> 97,573\n317,865 -> 678,504\n800,61 -> 800,51\n179,242 -> 179,202\n529,757 -> 529,838\n288,953 -> 393,953\n372,15 -> 925,568\n100,85 -> 654,639\n663,562 -> 737,636\n576,981 -> 245,981\n347,240 -> 347,928\n91,119 -> 413,441\n637,397 -> 330,90\n534,257 -> 950,257\n155,636 -> 694,97\n539,274 -> 539,327\n329,795 -> 824,300\n103,51 -> 961,909\n87,868 -> 168,787\n21,250 -> 157,386\n591,316 -> 670,395\n722,670 -> 630,670\n28,167 -> 28,489\n480,210 -> 68,622\n573,700 -> 354,919\n186,59 -> 700,59\n121,186 -> 670,186\n797,985 -> 671,985\n836,804 -> 335,804\n701,835 -> 104,238\n456,718 -> 456,964\n694,891 -> 694,839\n205,637 -> 205,318\n40,958 -> 773,225\n151,391 -> 151,779\n693,894 -> 417,894\n418,700 -> 656,700\n196,985 -> 896,985\n357,509 -> 608,258\n552,558 -> 552,482\n184,412 -> 170,412\n122,746 -> 643,225\n268,930 -> 247,930\n979,820 -> 407,248\n755,893 -> 845,893\n706,843 -> 706,225\n162,726 -> 895,726\n140,888 -> 289,888\n614,432 -> 903,721\n272,725 -> 272,598\n529,672 -> 967,234\n903,989 -> 785,871\n422,355 -> 422,360\n313,722 -> 713,322\n460,121 -> 460,151\n55,944 -> 946,944\n795,744 -> 221,744\n816,953 -> 471,953\n865,186 -> 557,186\n94,976 -> 747,323\n302,961 -> 811,452\n361,966 -> 921,406\n197,988 -> 571,988\n310,905 -> 722,493\n699,91 -> 272,518\n295,306 -> 84,95\n220,116 -> 395,291\n183,364 -> 523,364\n16,986 -> 16,319\n54,980 -> 635,399\n340,110 -> 651,421\n788,76 -> 788,635\n933,375 -> 458,375\n12,434 -> 494,916\n253,892 -> 962,183\n240,508 -> 240,234\n763,934 -> 506,677\n308,135 -> 239,66\n117,649 -> 751,15\n95,535 -> 428,868\n16,937 -> 902,51\n547,404 -> 547,830\n128,581 -> 970,581\n959,810 -> 564,415\n971,738 -> 378,145\n919,210 -> 295,210\n737,43 -> 231,43\n82,577 -> 455,204\n821,337 -> 570,337\n688,753 -> 538,753\n891,844 -> 124,844\n74,957 -> 946,85\n43,942 -> 43,210\n100,391 -> 100,142\n975,527 -> 175,527\n510,844 -> 395,959\n558,231 -> 558,858\n839,915 -> 262,338\n784,290 -> 875,199\n644,824 -> 812,824\n899,657 -> 500,657\n263,668 -> 263,964\n157,374 -> 820,374\n530,301 -> 530,67\n15,688 -> 15,572\n216,844 -> 479,581\n973,59 -> 68,964\n104,92 -> 104,547\n421,472 -> 421,176\n887,805 -> 231,149\n140,980 -> 852,980\n248,602 -> 346,602\n334,961 -> 334,471\n892,892 -> 958,958\n270,83 -> 270,135\n950,105 -> 404,651\n979,476 -> 930,427\n416,430 -> 879,430\n796,937 -> 796,415\n670,679 -> 72,679\n733,884 -> 733,302\n745,196 -> 306,196\n174,353 -> 667,846\n285,978 -> 254,978\n10,63 -> 936,989\n242,107 -> 242,725\n238,341 -> 238,800\n975,102 -> 174,903\n530,474 -> 530,853\n931,47 -> 467,47\n86,141 -> 821,141\n263,15 -> 654,15\n688,542 -> 378,232\n826,793 -> 989,793\n729,285 -> 729,192\n587,915 -> 587,79\n548,667 -> 877,667\n15,836 -> 783,68\n662,673 -> 71,82\n312,681 -> 910,83\n760,418 -> 491,418\n175,502 -> 443,502\n817,878 -> 29,90\n798,569 -> 811,582\n703,141 -> 743,181\n941,849 -> 941,778\n63,24 -> 500,461\n697,183 -> 119,761\n705,672 -> 152,672\n150,567 -> 656,567\n158,411 -> 965,411\n702,872 -> 276,446\n141,179 -> 741,779\n533,886 -> 817,886\n569,949 -> 285,949\n699,764 -> 699,780\n333,863 -> 805,391\n861,804 -> 524,467\n791,501 -> 718,501\n976,265 -> 976,713\n129,342 -> 339,132\n322,738 -> 212,738\n700,534 -> 622,456\n68,314 -> 14,314\n146,112 -> 215,181\n170,211 -> 482,211\n159,412 -> 159,32\n312,939 -> 312,95\n232,18 -> 912,698\n950,114 -> 950,826\n620,848 -> 620,11\n624,288 -> 544,208\n752,479 -> 752,577\n784,796 -> 784,872\n130,55 -> 974,899\n434,82 -> 434,481\n988,230 -> 892,134\n159,252 -> 159,291\n462,14 -> 462,977\n553,981 -> 553,390\n231,936 -> 51,936\n58,759 -> 60,759\n572,891 -> 584,891\n705,303 -> 124,303\n144,894 -> 970,68\n865,275 -> 865,956\n492,491 -> 470,491\n971,15 -> 977,15\n750,521 -> 33,521\n913,947 -> 387,421\n368,677 -> 570,677\n795,186 -> 882,186\n404,840 -> 678,840\n187,488 -> 403,488\n824,706 -> 642,706\n330,541 -> 330,195\n564,531 -> 774,531\n271,857 -> 20,606\n976,975 -> 976,843\n323,341 -> 21,39\n575,643 -> 267,643\n827,295 -> 827,854\n749,486 -> 749,780\n656,716 -> 656,470\n635,187 -> 417,187\n503,488 -> 503,393\n592,688 -> 592,567\n515,408 -> 128,795\n608,158 -> 780,158\n677,96 -> 11,762\n127,452 -> 339,452\n117,985 -> 291,811\n157,371 -> 157,916\n640,758 -> 983,758\n906,413 -> 906,776\n224,842 -> 627,439\n903,728 -> 903,459\n358,138 -> 822,602\n30,16 -> 929,915\n440,900 -> 294,900\n809,73 -> 987,73\n55,410 -> 304,161\n441,672 -> 315,672\n939,40 -> 234,40\n334,698 -> 309,698\n572,738 -> 572,226\n445,71 -> 445,468\n225,660 -> 427,458\n390,320 -> 449,320\n507,635 -> 507,169\n47,116 -> 738,807\n127,14 -> 689,14\n316,760 -> 316,432\n831,101 -> 250,682\n370,807 -> 370,898\n678,186 -> 491,186\n866,83 -> 539,83\n518,848 -> 518,962\n188,135 -> 81,28\n378,226 -> 597,226\n646,534 -> 141,534\n275,672 -> 275,854\n67,421 -> 676,421\n386,323 -> 988,323\n903,984 -> 10,91\n37,348 -> 529,840\n872,134 -> 358,648\n42,826 -> 42,822\n688,922 -> 21,922\n47,539 -> 942,539\n739,483 -> 375,847\n23,217 -> 800,217\n589,512 -> 589,953\n292,229 -> 107,229\n873,678 -> 873,770\n794,295 -> 739,240\n464,559 -> 936,559\n685,736 -> 368,736\n114,941 -> 114,307\n571,643 -> 74,643\n281,185 -> 273,177\n497,937 -> 497,469\n152,815 -> 702,815\n76,43 -> 980,947\n272,149 -> 101,149\n934,945 -> 107,118\n532,476 -> 759,476\n955,942 -> 397,942\n31,918 -> 931,18\n790,420 -> 389,420\n36,496 -> 215,317\n252,209 -> 139,209\n704,148 -> 719,133\n413,571 -> 165,571\n690,433 -> 864,607\n976,417 -> 517,876\n803,568 -> 443,568\n335,558 -> 335,334\n405,807 -> 691,521\n194,482 -> 486,190\n377,856 -> 377,802\n313,842 -> 313,254\n449,961 -> 198,710\n197,916 -> 197,797\n82,965 -> 959,88\n371,239 -> 829,697\n471,70 -> 596,70\n835,144 -> 835,950\n283,486 -> 506,486\n147,29 -> 147,747\n187,485 -> 187,195\n781,144 -> 480,144\n801,839 -> 925,715\n415,960 -> 415,442\n877,939 -> 29,91\n22,118 -> 22,439\n460,315 -> 450,315\n982,960 -> 71,49\n105,231 -> 105,331\n98,174 -> 551,174\n721,978 -> 38,295\n167,290 -> 167,133\n218,158 -> 218,908\n819,812 -> 758,812\n123,92 -> 123,132\n66,721 -> 66,906\n478,441 -> 967,930\n284,58 -> 464,58\n958,15 -> 37,936\n310,337 -> 359,288\n212,763 -> 212,373\n101,279 -> 101,267\n622,409 -> 106,925\n318,657 -> 318,432\n938,631 -> 938,650\n142,881 -> 254,881\n848,987 -> 848,451\n686,223 -> 481,223\n124,248 -> 812,248\n246,267 -> 246,148\n96,670 -> 324,442\n645,888 -> 385,628\n417,555 -> 417,858\n543,495 -> 543,150\n73,350 -> 440,717\n459,704 -> 459,179\n871,493 -> 871,764\n911,34 -> 64,881\n544,791 -> 703,791\n447,218 -> 62,218\n202,649 -> 396,649\n935,916 -> 55,36\n124,408 -> 477,761\n608,850 -> 484,850\n935,876 -> 582,876\n377,612 -> 269,612\n413,727 -> 365,679\n64,451 -> 850,451\n684,807 -> 357,807\n323,364 -> 372,364\n887,300 -> 419,300\n837,831 -> 837,927\n294,255 -> 768,729\n878,23 -> 141,760\n36,627 -> 157,627\n824,703 -> 824,968\n356,109 -> 657,109\n799,266 -> 313,752\n71,600 -> 650,21\n564,863 -> 564,54\n36,720 -> 109,720\n318,488 -> 682,488\n249,350 -> 979,350\n560,502 -> 255,502\n132,327 -> 132,246\n287,906 -> 791,906\n818,110 -> 818,882\n937,17 -> 113,841\n50,710 -> 673,87\n702,952 -> 702,533\n666,552 -> 611,552\n612,962 -> 112,462\n260,529 -> 351,529\n440,313 -> 440,663\n605,341 -> 405,141\n277,287 -> 461,287\n268,890 -> 268,92\n764,526 -> 877,639\n165,697 -> 832,697\n240,716 -> 801,155\n872,429 -> 578,429\n88,816 -> 338,816\n981,881 -> 981,138\n457,351 -> 457,679\n850,526 -> 850,447\n139,449 -> 165,449\n127,544 -> 127,934\n160,890 -> 745,305\n526,113 -> 303,336\n17,500 -> 17,621\n796,311 -> 181,926\n260,218 -> 787,218\n536,989 -> 536,261\n257,826 -> 257,180\n531,37 -> 531,493\n961,942 -> 206,187\n536,668 -> 536,868\n154,967 -> 154,931\n808,317 -> 808,873\n487,258 -> 599,258\n59,962 -> 802,219\n322,945 -> 322,837\n378,973 -> 33,628\n668,556 -> 691,556\n819,728 -> 787,728\n484,261 -> 484,874\n333,271 -> 278,271\n733,515 -> 741,523\n775,854 -> 523,602\n67,215 -> 616,215\n951,685 -> 951,433\n372,105 -> 372,494\n917,788 -> 917,23\n890,584 -> 245,584\n748,276 -> 893,276\n733,721 -> 733,747\n225,908 -> 897,908\n437,140 -> 423,140\n456,513 -> 136,833\n413,135 -> 413,596\n143,245 -> 879,981\n870,639 -> 942,639\n28,175 -> 696,843\n393,303 -> 393,197\n169,986 -> 458,986\n43,44 -> 952,953\n236,405 -> 60,229\n266,845 -> 292,845\n529,98 -> 95,532\n95,658 -> 695,658\n368,454 -> 112,710\n506,776 -> 662,776\n928,494 -> 604,170\n179,138 -> 900,859\n45,560 -> 408,197\n655,654 -> 37,36\n56,432 -> 56,456\n844,614 -> 844,898\n240,191 -> 240,112\n639,911 -> 213,911\n47,887 -> 830,104\n57,50 -> 977,970\n899,928 -> 111,928\n962,676 -> 962,518\n129,585 -> 469,245\n988,775 -> 988,553\n417,344 -> 842,769\n468,110 -> 506,72\n687,204 -> 687,345\n828,553 -> 765,490\n75,894 -> 75,93\n26,798 -> 11,783\n967,44 -> 967,478\n240,481 -> 947,481\n794,254 -> 162,254\n502,944 -> 812,944\n331,417 -> 410,417\n850,275 -> 850,980\n671,130 -> 671,941\n240,99 -> 240,381\n771,399 -> 318,399\n946,11 -> 28,929\n731,939 -> 824,846\n268,71 -> 832,635\n968,37 -> 968,642\n935,365 -> 515,365\n199,792 -> 932,792\n32,116 -> 371,116\n324,67 -> 941,67\n453,181 -> 453,128\n958,982 -> 115,139\n962,168 -> 154,976\n474,215 -> 333,215\n458,675 -> 458,315\n577,302 -> 300,302\n704,493 -> 704,876\n887,549 -> 887,439\n81,328 -> 724,328\n575,490 -> 670,490\n576,17 -> 576,218\n21,46 -> 963,988\n532,235 -> 532,615\n796,213 -> 796,407\n55,948 -> 980,23\n775,471 -> 272,471\n26,138 -> 344,138\n635,518 -> 915,518\n727,365 -> 727,216`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day5 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n\n  // get the input into a usable array of coordinates\n  React.useEffect(() => {\n    setPuzzleInput(input1.split('\\n').map(v => {\n      const [startStr, endStr] = v.trim().split(' -> ')\n      const [x1, y1] = startStr.split(',')\n      const [x2, y2] = endStr.split(',')\n      return {\n        start: { x: parseInt(x1), y: parseInt(y1) },\n        end: { x: parseInt(x2), y: parseInt(y2)}\n      }\n    }))\n  }, [])\n\n  // first challenge, find overlapping coordinates in straight lines\n  React.useEffect(() => {\n    if (puzzleInput.length > 0) {\n      console.log(puzzleInput)\n      const allCoords = new Map() // using a map to easily collect counts per coordinate\n      puzzleInput.forEach(coord => {\n        if (coord.start.x === coord.end.x || coord.start.y === coord.end.y) { // only focusing on straight lines, so either x or y must match\n          if (coord.start.x !== coord.end.x) {\n            // want to start w/ the lower of the two numbers, and end with the higher of the two\n            const start = coord.start.x > coord.end.x ? coord.end.x : coord.start.x\n            const stop = coord.start.x < coord.end.x ? coord.end.x : coord.start.x\n            for (let i = start; i <= stop; i++) {\n              const newCoord = { x: i, y: coord.start.y }\n              const newCoordStr = JSON.stringify(newCoord)\n              let curr = 1\n              if (allCoords.has(newCoordStr)) { // if this coord exists, add to it\n                curr = allCoords.get(newCoordStr) + 1\n              }\n              allCoords.set(newCoordStr, curr)\n            }\n          }\n          if (coord.start.y !== coord.end.y) {\n            const start = coord.start.y > coord.end.y ? coord.end.y : coord.start.y\n            const stop = coord.start.y < coord.end.y ? coord.end.y : coord.start.y\n            for (let i = start; i <= stop; i++) {\n              const newCoord = { x: coord.start.x, y: i }\n              const newCoordStr = JSON.stringify(newCoord)\n              let curr = 1\n              if (allCoords.has(newCoordStr)) {\n                curr = allCoords.get(newCoordStr) + 1\n              }\n              allCoords.set(newCoordStr, curr)\n            }\n          }\n        }\n      })\n      let countOver1 = 0\n      allCoords.forEach((value, key) => { // find all the ones where the count is over 1\n        if (value > 1) {\n          countOver1 += 1\n        }\n      })\n      setFirst(countOver1)\n    }\n  }, [puzzleInput])\n\n  // second challenge, now include oords that overlap with diagnols\n  React.useEffect(() => {\n    if (first) {\n      const allCoords = new Map()\n      puzzleInput.forEach(coord => {\n          if (coord.start.x !== coord.end.x && coord.start.y === coord.end.y) {\n            // want to start w/ the lower of the two numbers, and end with the higher of the two\n            const start = coord.start.x > coord.end.x ? coord.end.x : coord.start.x\n            const stop = coord.start.x < coord.end.x ? coord.end.x : coord.start.x\n            for (let i = start; i <= stop; i++) {\n              const newCoord = { x: i, y: coord.start.y }\n              const newCoordStr = JSON.stringify(newCoord)\n              let curr = 1\n              if (allCoords.has(newCoordStr)) {\n                curr = allCoords.get(newCoordStr) + 1\n              }\n              allCoords.set(newCoordStr, curr)\n            }\n          }\n          if (coord.start.y !== coord.end.y && coord.start.x === coord.end.x) {\n            const start = coord.start.y > coord.end.y ? coord.end.y : coord.start.y\n            const stop = coord.start.y < coord.end.y ? coord.end.y : coord.start.y\n            for (let i = start; i <= stop; i++) {\n              const newCoord = { x: coord.start.x, y: i }\n              const newCoordStr = JSON.stringify(newCoord)\n              let curr = 1\n              if (allCoords.has(newCoordStr)) {\n                curr = allCoords.get(newCoordStr) + 1\n              }\n              allCoords.set(newCoordStr, curr)\n            }\n          }\n          // drawing diagonal\n          if (coord.start.x !== coord.end.x && coord.start.y !== coord.end.y) {\n            const startx = coord.start.x > coord.end.x ? coord.end.x : coord.start.x\n            const stopx = coord.start.x < coord.end.x ? coord.end.x : coord.start.x\n            const total = stopx - startx // getting the total distance of 1 coord, since it's a 45º angle, it'll be the same for x and y\n            for (let i = 0; i <= total; i++) {\n              const newx = coord.start.x > coord.end.x ? coord.start.x - i : coord.start.x + i // handle increase or decrease depending if we're starting low or high\n              const newy = coord.start.y > coord.end.y ? coord.start.y - i : coord.start.y + i\n              const newCoord = { x: newx, y: newy }\n              const newCoordStr = JSON.stringify(newCoord)\n              let curr = 1\n              if (allCoords.has(newCoordStr)) {\n                curr = allCoords.get(newCoordStr) + 1\n              }\n              allCoords.set(newCoordStr, curr)\n            }\n          }\n        \n      })\n      let countOver1 = 0\n      allCoords.forEach((value, key) => {\n        if (value > 1) {\n          countOver1 += 1\n        }\n      })\n      setSecond(countOver1)\n    }\n  }, [first, puzzleInput])\n\n  return (\n    <div className=\"day\">\n      <h2>Day 5 - Hydrothermal Venture</h2>\n      <h2>Answer #1</h2>\n      {first} overlaps (straight lines)\n      <h2>Answer #2</h2>\n      {second} overlaps (including diagonals)\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: input1.split('\\n').join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day5","const puzzle = `1,2,1,1,1,1,1,1,2,1,3,1,1,1,1,3,1,1,1,5,1,1,1,4,5,1,1,1,3,4,1,1,1,1,1,1,1,5,1,4,1,1,1,1,1,1,1,5,1,3,1,3,1,1,1,5,1,1,1,1,1,5,4,1,2,4,4,1,1,1,1,1,5,1,1,1,1,1,5,4,3,1,1,1,1,1,1,1,5,1,3,1,4,1,1,3,1,1,1,1,1,1,2,1,4,1,3,1,1,1,1,1,5,1,1,1,2,1,1,1,1,2,1,1,1,1,4,1,3,1,1,1,1,1,1,1,1,5,1,1,4,1,1,1,1,1,3,1,3,3,1,1,1,2,1,1,1,1,1,1,1,1,1,5,1,1,1,1,5,1,1,1,1,2,1,1,1,4,1,1,1,2,3,1,1,1,1,1,1,1,1,2,1,1,1,2,3,1,2,1,1,5,4,1,1,2,1,1,1,3,1,4,1,1,1,1,3,1,2,5,1,1,1,5,1,1,1,1,1,4,1,1,4,1,1,1,2,2,2,2,4,3,1,1,3,1,1,1,1,1,1,2,2,1,1,4,2,1,4,1,1,1,1,1,5,1,1,4,2,1,1,2,5,4,2,1,1,1,1,4,2,3,5,2,1,5,1,3,1,1,5,1,1,4,5,1,1,1,1,4`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day6 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n\n  // get the input into a usable array\n  React.useEffect(() => {\n   setPuzzleInput(input1.split(',').map(v => parseInt(v.trim())))\n  }, [])\n\n  // first challenge, after 80 days, how many fishies\n  React.useEffect(() => {\n    if (puzzleInput.length > 0) {\n      const daysToRun = 80\n      let fishies = [...puzzleInput]\n      for (let i = 0; i < daysToRun; i++) {\n        const newFishes = []\n        fishies.forEach(fish => {\n          let newAge = fish - 1\n          if (newAge === -1) {\n            newFishes.push(6) // reset this fish\n            newFishes.push(8) // spawn a new fish\n          } else {\n            newFishes.push(newAge) // aging fish, push it in\n          }\n        })\n        fishies = newFishes\n      }\n      setFirst(fishies.length)\n    }\n  }, [puzzleInput])\n\n  // second challenge, after 256 days, how many fishies\n  // first challenge approach was tooooooo slow\n  React.useEffect(() => {\n    if (first && puzzleInput.length > 0) {\n      const daysToRun = 256\n      const fishCounts = Array(9).fill(0)\n      puzzleInput.forEach(fish => {\n        fishCounts[fish] += 1 // make an array of counts per age\n      })\n\n      // instead of brute force, just keep track of the counts of each age\n      for (let day = 0; day < daysToRun; day++) {\n        const fishAt0 = fishCounts[0]\n        for (let age = 0; age < 8; age++) {\n          fishCounts[age] = fishCounts[age + 1]\n        }\n        fishCounts[8] = fishAt0\n        fishCounts[6] += fishAt0\n      }\n      setSecond(fishCounts.reduce((a,b) => a+b, 0))\n    }\n  }, [first, puzzleInput])\n\n  return (\n    <div className=\"day\">\n      <h2>Day 6 - Lanternfish</h2>\n      <h2>Answer #1</h2>\n      {first}\n      <h2>Answer #2</h2>\n      {second}\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day6","import React from 'react'\nimport Day1 from './01-sonar-sweep/day1'\nimport Day2 from './02-dive/day2'\nimport Day3 from './03-binary-diagnostic/day3'\nimport Day4 from './04-giant-squid/day4'\nimport Day5 from './05-hydrothermal-venture/day5'\nimport Day6 from './06-lanternfish/day6'\n\nimport './App.css';\n\nfunction App() {\n  const [selectedDay, setSelectedDay] = React.useState(null);\n  const [selectedDayComponent, setSelectedDayComponent] = React.useState(null);\n\n  React.useEffect(() => {\n    switch (selectedDay) {\n      case 'day1':\n        setSelectedDayComponent(<Day1 />)\n        break;\n      case 'day2':\n        setSelectedDayComponent(<Day2 />)\n        break;\n      case 'day3':\n        setSelectedDayComponent(<Day3 />)\n        break;\n      case 'day4':\n        setSelectedDayComponent(<Day4 />)\n        break;\n      case 'day5':\n        setSelectedDayComponent(<Day5 />)\n        break;\n      case 'day6':\n        setSelectedDayComponent(<Day6 />)\n        break;\n      default:\n        setSelectedDayComponent(null);\n    }\n  }, [selectedDay])\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = new URLSearchParams(window.location.search)\n      if (params.get('day')) {\n        setSelectedDay(`day${params.get('day')}`)\n      }\n    }\n  }, [])\n\n  return <div className=\"App\">\n    <div className=\"snowflakes\" aria-hidden=\"true\">\n      <div className=\"snowflake\">\n      ❅\n      </div>\n      <div className=\"snowflake\">\n      ❆\n      </div>\n      <div className=\"snowflake\">\n      ❅\n      </div>\n      <div className=\"snowflake\">\n      ❆\n      </div>\n      <div className=\"snowflake\">\n      ❅\n      </div>\n      <div className=\"snowflake\">\n      ❆\n      </div>\n      <div className=\"snowflake\">\n        ❅\n      </div>\n      <div className=\"snowflake\">\n        ❆\n      </div>\n      <div className=\"snowflake\">\n        ❅\n      </div>\n      <div className=\"snowflake\">\n        ❆\n      </div>\n      <div className=\"snowflake\">\n        ❅\n      </div>\n      <div className=\"snowflake\">\n        ❆\n      </div>\n    </div>\n    <header className=\"App-header\">\n      <h2>Advent of Code 2021</h2>\n      <div><a href=\"https://twitter.com/davidlozzi\" target=\"_blank\" rel=\"noreferrer\">by david lozzi</a> <a href=\"https://github.com/DavidLozzi/AdventOfCode21\">go to code repo</a></div>\n    </header>\n    <div className=\"container\">\n      {selectedDay && <button onClick={() => setSelectedDay('') } className=\"smaller\">Back</button>}\n    {selectedDayComponent}\n    {!selectedDay && <div className=\"buttons-wrapper\">\n        <button onClick={() => setSelectedDay('day1')}>Day 1 - Sonar Sweep</button>\n        <button onClick={() => setSelectedDay('day2')}>Day 2 - Dive</button>\n        <button onClick={() => setSelectedDay('day3')}>Day 3 - Binary Diagnostic</button>\n        <button onClick={() => setSelectedDay('day4')}>Day 4 - Giant Squid</button>\n        <button onClick={() => setSelectedDay('day5')}>Day 5 - Hydrothermal Venture</button>\n        <button onClick={() => setSelectedDay('day6')}>Day 6 - Lanternfish</button>\n      </div>}\n    </div>\n </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}