{"version":3,"sources":["01-sonar-sweep/input1.js","01-sonar-sweep/day1.js","02-dive/input1.js","02-dive/day2.js","03-binary-diagnostic/input1.js","03-binary-diagnostic/day3.js","App.js","reportWebVitals.js","index.js"],"names":["puzzle","Day1","React","useState","puzzleInput","setPuzzleInput","first","setFirst","second","setSecond","useEffect","input1","split","map","v","trim","reduce","total","current","index","console","log","parseInt","length","dangerouslySetInnerHTML","__html","join","className","Day2","prepData","setPrepData","_input","_prepData","p","match","direction","distance","x","y","totalX","setTotalX","totalY","setTotalY","forEach","totalX2","setTotalX2","totalY2","setTotalY2","totalAim","setTotalAim","aim","Day3","gammaBinary","setGammaBinary","gammaRate","setGammaRate","epsilonBinary","setEpsilonBinary","epsilonRate","setEpsilonRate","oxygenBinary","setOxygenBinary","co2Binary","setCO2Binary","oxygenRating","setOxygenRating","co2Rating","setCO2Rating","getBinaries","binaryArray","counts","Map","b","indx","bNum","has","set","get","totalNums","_gammaRate","_epsilonRate","value","key","_gamma","_epsilon","warn","oxyResults","commonBits","bitIndex","bit","substring","filter","r","co2Results","App","selectedDay","setSelectedDay","selectedDayComponent","setSelectedDayComponent","class","href","target","rel","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8034b94.chunk.js","sourcesContent":["const puzzle = `109\n117\n118\n98\n102\n94\n101\n109\n121\n126\n117\n116\n134\n119\n98\n97\n96\n98\n101\n107\n123\n134\n137\n160\n171\n188\n189\n188\n169\n163\n182\n184\n187\n184\n196\n199\n218\n222\n223\n218\n214\n220\n215\n223\n226\n228\n236\n237\n268\n277\n282\n284\n285\n288\n289\n313\n322\n331\n335\n331\n316\n323\n314\n313\n314\n301\n302\n320\n315\n323\n324\n346\n347\n362\n376\n377\n378\n379\n381\n391\n392\n395\n391\n393\n399\n401\n403\n428\n423\n422\n427\n430\n432\n431\n433\n449\n456\n455\n456\n457\n456\n460\n461\n460\n459\n460\n467\n468\n505\n506\n513\n505\n509\n510\n511\n521\n522\n523\n525\n521\n514\n517\n510\n507\n534\n543\n554\n552\n578\n587\n593\n598\n591\n592\n579\n580\n576\n594\n593\n594\n598\n610\n611\n609\n607\n606\n609\n616\n617\n605\n604\n616\n628\n641\n642\n643\n644\n641\n652\n645\n637\n652\n651\n648\n649\n647\n650\n651\n652\n660\n675\n672\n643\n624\n633\n635\n626\n642\n645\n651\n658\n671\n674\n684\n687\n668\n675\n650\n662\n680\n679\n701\n704\n716\n720\n727\n736\n734\n738\n735\n742\n754\n781\n777\n778\n792\n795\n797\n796\n816\n819\n829\n839\n846\n839\n864\n865\n868\n869\n873\n878\n876\n878\n881\n882\n909\n922\n929\n944\n945\n944\n945\n954\n958\n959\n963\n967\n960\n957\n965\n986\n1006\n986\n1007\n1010\n1011\n1000\n1001\n970\n974\n972\n974\n982\n990\n988\n1002\n1003\n1027\n1037\n1034\n1045\n1036\n1038\n1036\n1016\n1015\n1032\n1038\n1040\n1041\n1043\n1046\n1088\n1105\n1112\n1113\n1114\n1117\n1132\n1130\n1132\n1121\n1124\n1112\n1117\n1118\n1122\n1123\n1154\n1155\n1153\n1150\n1151\n1167\n1171\n1172\n1173\n1174\n1181\n1183\n1193\n1194\n1227\n1231\n1234\n1253\n1256\n1255\n1242\n1255\n1276\n1280\n1297\n1298\n1308\n1309\n1307\n1325\n1327\n1329\n1325\n1319\n1323\n1324\n1327\n1361\n1364\n1368\n1360\n1365\n1348\n1357\n1358\n1359\n1372\n1373\n1377\n1381\n1383\n1385\n1384\n1387\n1382\n1381\n1410\n1405\n1412\n1413\n1416\n1417\n1423\n1434\n1437\n1442\n1443\n1445\n1460\n1461\n1459\n1479\n1452\n1475\n1492\n1503\n1508\n1507\n1479\n1480\n1472\n1471\n1478\n1479\n1456\n1459\n1469\n1457\n1460\n1465\n1469\n1477\n1478\n1482\n1485\n1486\n1485\n1463\n1473\n1477\n1480\n1482\n1493\n1494\n1495\n1507\n1502\n1501\n1496\n1494\n1495\n1493\n1490\n1497\n1521\n1530\n1524\n1525\n1521\n1529\n1545\n1529\n1526\n1538\n1525\n1505\n1506\n1511\n1512\n1513\n1512\n1515\n1548\n1555\n1557\n1575\n1576\n1598\n1596\n1609\n1605\n1608\n1621\n1631\n1632\n1645\n1647\n1660\n1665\n1693\n1703\n1697\n1699\n1711\n1701\n1702\n1703\n1715\n1716\n1717\n1693\n1692\n1697\n1669\n1670\n1673\n1690\n1697\n1705\n1707\n1726\n1720\n1721\n1726\n1732\n1731\n1739\n1749\n1737\n1713\n1718\n1734\n1735\n1742\n1745\n1742\n1741\n1742\n1743\n1776\n1779\n1797\n1801\n1802\n1804\n1806\n1807\n1803\n1804\n1806\n1817\n1815\n1802\n1803\n1809\n1811\n1814\n1811\n1815\n1817\n1818\n1817\n1808\n1819\n1824\n1829\n1830\n1817\n1819\n1820\n1821\n1822\n1823\n1827\n1828\n1829\n1832\n1834\n1839\n1845\n1848\n1857\n1859\n1879\n1880\n1885\n1888\n1887\n1912\n1910\n1917\n1929\n1930\n1931\n1932\n1930\n1914\n1917\n1904\n1910\n1913\n1901\n1903\n1904\n1900\n1896\n1917\n1921\n1910\n1914\n1915\n1917\n1915\n1916\n1939\n1940\n1941\n1942\n1943\n1946\n1947\n1962\n1946\n1949\n1938\n1935\n1927\n1928\n1931\n1932\n1933\n1931\n1957\n1951\n1956\n1957\n1958\n1969\n1967\n1966\n1992\n1991\n1997\n1999\n2010\n2016\n2039\n2043\n2047\n2048\n2046\n2064\n2069\n2072\n2084\n2094\n2103\n2104\n2105\n2080\n2090\n2092\n2079\n2094\n2100\n2097\n2105\n2104\n2092\n2093\n2094\n2100\n2105\n2106\n2122\n2126\n2128\n2134\n2141\n2153\n2154\n2157\n2170\n2171\n2158\n2156\n2180\n2181\n2167\n2182\n2188\n2166\n2162\n2167\n2163\n2181\n2191\n2192\n2195\n2237\n2236\n2249\n2255\n2258\n2271\n2272\n2257\n2260\n2263\n2264\n2281\n2282\n2285\n2289\n2293\n2279\n2284\n2287\n2292\n2291\n2303\n2304\n2302\n2306\n2324\n2323\n2327\n2330\n2321\n2332\n2316\n2320\n2323\n2336\n2332\n2303\n2304\n2303\n2304\n2308\n2311\n2324\n2325\n2347\n2348\n2345\n2340\n2348\n2347\n2348\n2346\n2352\n2345\n2346\n2347\n2350\n2354\n2359\n2363\n2369\n2374\n2378\n2377\n2393\n2400\n2403\n2405\n2404\n2411\n2417\n2415\n2408\n2407\n2409\n2419\n2420\n2446\n2448\n2450\n2451\n2446\n2447\n2448\n2450\n2451\n2449\n2448\n2450\n2453\n2454\n2460\n2463\n2465\n2474\n2471\n2473\n2471\n2485\n2487\n2483\n2501\n2494\n2519\n2517\n2516\n2517\n2520\n2523\n2524\n2489\n2491\n2494\n2493\n2504\n2507\n2512\n2513\n2511\n2512\n2488\n2495\n2484\n2476\n2477\n2480\n2479\n2487\n2495\n2492\n2493\n2513\n2512\n2506\n2513\n2514\n2515\n2499\n2506\n2510\n2505\n2506\n2512\n2513\n2515\n2527\n2515\n2516\n2533\n2534\n2535\n2536\n2541\n2548\n2586\n2588\n2601\n2604\n2614\n2616\n2615\n2622\n2624\n2639\n2638\n2642\n2647\n2637\n2654\n2613\n2614\n2618\n2609\n2608\n2609\n2613\n2634\n2631\n2651\n2658\n2660\n2670\n2674\n2675\n2678\n2682\n2686\n2680\n2683\n2689\n2691\n2690\n2691\n2697\n2700\n2704\n2716\n2720\n2723\n2737\n2734\n2737\n2736\n2737\n2740\n2741\n2743\n2737\n2738\n2737\n2746\n2752\n2748\n2749\n2755\n2756\n2758\n2774\n2784\n2785\n2800\n2802\n2811\n2813\n2825\n2819\n2822\n2823\n2829\n2824\n2823\n2824\n2805\n2808\n2806\n2821\n2820\n2826\n2834\n2833\n2837\n2850\n2853\n2857\n2869\n2868\n2870\n2891\n2890\n2895\n2896\n2905\n2926\n2928\n2926\n2930\n2929\n2938\n2970\n2976\n2968\n2967\n2988\n3000\n3001\n3002\n3003\n3020\n3021\n3025\n3035\n3041\n3040\n3014\n3013\n3019\n3024\n3025\n3035\n3036\n3032\n3054\n3065\n3064\n3053\n3054\n3058\n3052\n3061\n3063\n3064\n3068\n3096\n3095\n3091\n3114\n3124\n3130\n3137\n3146\n3147\n3148\n3142\n3144\n3145\n3150\n3151\n3149\n3158\n3146\n3144\n3135\n3153\n3166\n3168\n3167\n3151\n3147\n3155\n3156\n3159\n3156\n3159\n3160\n3175\n3174\n3188\n3182\n3175\n3185\n3189\n3194\n3169\n3173\n3176\n3177\n3169\n3137\n3138\n3148\n3139\n3141\n3142\n3162\n3163\n3168\n3164\n3168\n3167\n3176\n3173\n3197\n3198\n3199\n3216\n3232\n3245\n3272\n3295\n3294\n3291\n3301\n3303\n3304\n3306\n3307\n3306\n3312\n3291\n3292\n3290\n3266\n3271\n3261\n3267\n3268\n3288\n3300\n3289\n3297\n3264\n3271\n3255\n3256\n3263\n3266\n3269\n3308\n3323\n3320\n3326\n3332\n3334\n3335\n3341\n3369\n3375\n3365\n3359\n3362\n3365\n3370\n3371\n3364\n3365\n3366\n3375\n3376\n3392\n3393\n3428\n3458\n3474\n3475\n3484\n3490\n3496\n3512\n3510\n3512\n3513\n3516\n3517\n3540\n3550\n3549\n3540\n3552\n3559\n3549\n3550\n3568\n3569\n3568\n3572\n3576\n3578\n3580\n3581\n3583\n3586\n3590\n3574\n3576\n3579\n3563\n3558\n3557\n3554\n3556\n3564\n3561\n3563\n3583\n3582\n3590\n3594\n3583\n3578\n3596\n3602\n3615\n3621\n3625\n3631\n3633\n3655\n3636\n3639\n3640\n3641\n3644\n3646\n3652\n3655\n3671\n3681\n3685\n3692\n3673\n3691\n3696\n3692\n3695\n3704\n3719\n3721\n3728\n3737\n3738\n3754\n3757\n3754\n3759\n3758\n3765\n3767\n3770\n3774\n3769\n3756\n3755\n3750\n3780\n3782\n3781\n3785\n3788\n3771\n3774\n3775\n3764\n3742\n3743\n3755\n3759\n3757\n3767\n3771\n3770\n3776\n3778\n3773\n3774\n3775\n3778\n3777\n3764\n3773\n3767\n3768\n3769\n3792\n3810\n3808\n3791\n3789\n3790\n3816\n3838\n3841\n3849\n3850\n3849\n3853\n3854\n3878\n3880\n3892\n3911\n3886\n3885\n3889\n3892\n3893\n3918\n3919\n3915\n3916\n3913\n3928\n3955\n3956\n3961\n3959\n3963\n3962\n3964\n3973\n3969\n3972\n3973\n3974\n3993\n3995\n3998\n4018\n4026\n4027\n4026\n4027\n4024\n4039\n4052\n4055\n4056\n4060\n4077\n4069\n4066\n4067\n4071\n4102\n4099\n4106\n4112\n4114\n4125\n4130\n4127\n4157\n4147\n4148\n4127\n4130\n4131\n4130\n4129\n4134\n4124\n4132\n4133\n4134\n4153\n4154\n4157\n4154\n4187\n4168\n4165\n4170\n4172\n4205\n4203\n4204\n4174\n4175\n4172\n4169\n4171\n4198\n4203\n4215\n4209\n4212\n4213\n4229\n4230\n4232\n4233\n4237\n4242\n4243\n4268\n4277\n4278\n4284\n4293\n4298\n4302\n4281\n4282\n4280\n4271\n4264\n4265\n4258\n4269\n4268\n4273\n4276\n4284\n4270\n4271\n4266\n4275\n4305\n4309\n4314\n4316\n4324\n4323\n4335\n4338\n4339\n4368\n4369\n4368\n4373\n4375\n4366\n4370\n4376\n4375\n4374\n4377\n4378\n4379\n4380\n4392\n4395\n4391\n4389\n4390\n4391\n4400\n4393\n4391\n4396\n4364\n4351\n4385\n4387\n4391\n4395\n4387\n4407\n4408\n4410\n4426\n4449\n4450\n4460\n4461\n4460\n4465\n4469\n4472\n4479\n4489\n4492\n4508\n4512\n4527\n4537\n4544\n4552\n4553\n4561\n4566\n4567\n4561\n4559\n4550\n4543\n4549\n4554\n4557\n4558\n4570\n4585\n4595\n4597\n4584\n4583\n4605\n4603\n4606\n4607\n4608\n4612\n4611\n4610\n4620\n4621\n4613\n4615\n4605\n4617\n4626\n4650\n4655\n4665\n4664\n4663\n4665\n4669\n4668\n4670\n4662\n4666\n4665\n4660\n4661\n4673\n4676\n4679\n4685\n4687\n4708\n4704\n4707\n4717\n4718\n4716\n4724\n4715\n4718\n4721\n4714\n4738\n4739\n4740\n4753\n4756\n4757\n4763\n4754\n4755\n4747\n4760\n4761\n4760\n4781\n4774\n4776\n4784\n4786\n4785\n4783\n4798\n4800\n4796\n4795\n4798\n4800\n4801\n4805\n4794\n4800\n4819\n4823\n4824\n4822\n4816\n4820\n4826\n4831\n4830\n4832\n4833\n4827\n4822\n4826\n4825\n4824\n4823\n4824\n4844\n4849\n4853\n4858\n4861\n4859\n4856\n4841\n4843\n4844\n4843\n4858\n4859\n4864\n4860\n4857\n4869\n4901\n4902\n4907\n4908\n4909\n4911\n4914\n4918\n4906\n4907\n4912\n4902\n4911\n4888\n4890\n4888\n4885\n4887\n4873\n4874\n4880\n4891\n4890\n4891\n4892\n4909\n4910\n4930\n4932\n4937\n4940\n4948\n4950\n4945\n4948\n4949\n4950\n4946\n4945\n4936\n4954\n4955\n4942\n4952\n4956\n4959\n4958\n4960\n4958\n4964\n4972\n4974\n4973\n4974\n4988\n4989\n4956\n4960\n4959\n4966\n4968\n4961\n4965\n4971\n4979\n4983\n4990\n4991\n4990\n4993\n4997\n5016\n5010\n5008\n5009\n4997\n4998\n4999\n5008\n5021\n5022\n5023\n5024\n5030\n5014\n5017\n5022\n5018\n5017\n5021\n5023\n5002\n5003\n5004\n5010\n4998\n4999\n5008\n5007\n5011\n5013\n5039\n5041\n5043\n5046\n5057\n5055\n5017\n5015\n5010\n5011\n5017\n5011\n5019\n5020\n5022\n5023\n5032\n5033\n5042\n5062\n5083\n5092\n5093\n5081\n5082\n5085\n5086\n5085\n5087\n5099\n5096\n5085\n5088\n5087\n5090\n5091\n5104\n5092\n5093\n5081\n5080\n5082\n5086\n5087\n5088\n5098\n5097\n5101\n5114\n5117\n5120\n5128\n5129\n5126\n5127\n5128\n5129\n5135\n5138\n5142\n5145\n5146\n5169\n5170\n5172\n5168\n5172\n5189\n5190\n5201\n5222\n5219\n5220\n5237\n5238\n5245\n5286\n5280\n5293\n5294\n5306\n5305\n5308\n5317\n5320\n5322\n5347\n5363\n5361\n5359\n5365\n5373\n5375\n5379\n5378\n5379\n5381\n5388\n5386\n5389\n5401\n5402\n5401\n5403\n5409\n5404\n5409\n5414\n5415\n5434\n5436\n5444\n5448\n5465\n5464\n5465\n5466\n5468\n5469\n5456\n5460\n5443\n5445\n5443\n5439\n5438\n5445\n5452\n5484\n5487\n5481\n5488\n5489\n5504\n5513\n5536\n5539\n5547\n5571\n5584\n5597\n5601\n5572\n5575\n5582\n5583\n5586\n5591\n5590\n5603\n5598\n5603\n5588\n5570\n5571\n5573\n5575\n5594\n5595\n5599\n5602\n5610\n5641\n5639\n5647\n5656\n5663\n5661\n5664\n5651\n5645\n5650\n5658\n5659\n5660\n5655\n5654\n5655\n5673\n5672\n5655\n5653\n5661\n5666\n5669\n5671\n5675\n5681\n5692\n5685\n5684\n5685\n5684\n5724\n5725\n5732\n5731\n5732\n5733\n5728\n5743\n5742\n5767\n5775\n5779\n5783\n5774\n5778\n5783\n5795\n5797\n5801\n5795\n5794\n5795\n5790\n5789\n5791\n5789\n5791\n5792\n5788\n5789\n5798\n5799\n5792\n5802\n5801\n5808\n5805\n5806\n5799\n5795\n5812\n5816\n5818\n5794\n5779\n5781\n5792\n5799\n5814\n5805\n5809\n5811\n5813\n5816\n5820\n5835\n5830\n5829\n5857\n5862\n5863\n5854\n5849\n5852\n5855\n5853\n5852\n5853\n5857\n5858\n5867\n5863\n5865\n5864\n5875\n5900\n5874\n5883\n5886\n5915\n5913\n5914\n5882\n5888\n5889\n5890\n5891\n5880\n5883\n5901\n5903\n5904\n5907\n5910\n5913\n5928\n5954\n5963\n5964\n5967\n5975\n5976\n5973\n5979\n5980\n5979\n5990\n5989\n6002\n5998\n6006\n6012\n6007\n6014\n6019\n6020\n6019\n6008\n6022\n6032\n6028\n6010\n6009\n6022\n6023\n6025\n6030\n6037\n6038\n6041\n6035\n6025\n6020\n6036\n6026\n6027\n6032\n6041\n6034\n6036\n6044\n6055\n6061\n6101\n6102\n6123\n6128\n6129\n6131\n6141\n6142\n6143\n6144\n6143\n6140\n6143\n6153\n6154\n6168\n6170\n6167\n6174\n6180\n6160\n6162\n6167\n6163\n6160\n6167\n6166\n6167\n6164\n6153\n6155\n6185\n6193\n6170\n6190\n6201\n6238\n6225\n6223\n6222\n6225\n6227\n6232\n6229\n6230\n6234\n6239\n6240\n6254\n6253\n6240\n6252\n6273\n6266\n6276\n6277\n6276\n6299\n6300\n6299\n6289\n6291\n6289\n6287\n6288\n6287\n6289\n6292\n6293\n6297\n6308`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day1 = () => {  \n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n  \n  // get the input into a usable array\n  React.useEffect(() => {\n    setPuzzleInput(input1.split('\\n').map(v => v.trim()))\n  }, [])\n\n  // first challenge, find how many times the number increases from the number before it\n  React.useEffect(() => {\n    setFirst(puzzleInput.reduce((total, current, index) => {\n      console.log('first', index, current)\n      if (index > 0) {\n        if (current > parseInt(puzzleInput[index - 1])) {\n          return total + 1\n        }\n      }\n      return total\n    }, 0))\n  }, [puzzleInput])\n\n  // second challenge, find how many times the three-measurement window increases\n  React.useEffect(() => {\n    setSecond(puzzleInput.reduce((total, current, index) => {\n      console.log('second', index, current)\n      if (index > 0) {\n        // get the current sliding measurement, including current plus the next two\n        const currentMeasure = parseInt(puzzleInput[index]) + parseInt(puzzleInput[index + 1]) + parseInt(puzzleInput[index + 2])\n        // get the previous sliding measurement, starting at the previous record plus the next two\n        const previousMeasure = parseInt(puzzleInput[index - 1]) + parseInt(puzzleInput[index]) + parseInt(puzzleInput[index + 1])\n        if (currentMeasure > previousMeasure) {\n          return total + 1\n        }\n      }\n      return total\n    }, 0))\n  }, [puzzleInput])\n\n  return (\n    <div >\n      <h2>Day 1 - Sonar Sweep</h2>\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n      <h2>Answer #1</h2>\n      {first}\n      <h2>Answer #2</h2>\n      {second}\n    </div>\n  );\n}\n\nexport default Day1","const puzzle = `forward 3\ndown 9\nforward 6\ndown 3\nforward 8\ndown 3\ndown 4\nforward 3\nforward 5\nup 7\nforward 1\nforward 1\nforward 5\ndown 8\ndown 5\nforward 3\nforward 2\nforward 4\ndown 7\nup 2\nup 2\ndown 5\ndown 5\ndown 8\ndown 2\ndown 4\nforward 8\nforward 8\nup 2\ndown 2\nup 8\nup 4\nforward 7\nup 8\ndown 6\nforward 9\nforward 6\nforward 5\nup 1\nforward 6\nforward 8\ndown 4\nforward 6\nup 8\ndown 9\nforward 1\ndown 1\nup 8\ndown 5\ndown 7\nforward 7\nup 8\nforward 4\nforward 5\nup 9\ndown 4\nforward 4\nup 5\ndown 6\nforward 3\nforward 2\nforward 3\nforward 6\nup 4\nup 7\nforward 6\nforward 2\ndown 1\nforward 3\nforward 3\nforward 2\ndown 6\nforward 2\nforward 4\nforward 9\nforward 1\nup 6\nforward 7\ndown 6\ndown 7\nforward 6\nup 4\ndown 7\nup 9\nup 2\ndown 6\ndown 6\nforward 9\ndown 2\nforward 5\nup 3\nup 6\nforward 3\nforward 3\nup 8\nforward 1\nforward 9\nforward 9\nup 6\nforward 3\nforward 2\nforward 8\nup 8\nforward 5\nup 6\nforward 9\ndown 4\ndown 5\nforward 7\ndown 6\nforward 8\nup 9\nforward 2\ndown 8\nup 4\nforward 7\ndown 9\nforward 5\nforward 7\ndown 4\nforward 3\nforward 7\nforward 4\nforward 7\nforward 4\nup 1\ndown 1\ndown 6\nup 4\nforward 2\ndown 5\ndown 8\ndown 1\nup 2\ndown 6\ndown 3\nforward 5\nforward 5\ndown 5\nforward 3\nforward 3\ndown 9\ndown 9\nup 5\ndown 5\ndown 3\nforward 2\ndown 1\nup 6\ndown 1\ndown 3\ndown 7\nforward 3\nforward 5\nforward 7\nup 9\nup 9\ndown 1\nforward 2\nup 4\ndown 1\nup 4\nforward 3\nforward 5\ndown 2\nforward 7\ndown 6\ndown 2\nforward 7\nforward 7\ndown 9\nup 4\ndown 6\ndown 1\ndown 5\ndown 5\ndown 3\ndown 1\nforward 9\nforward 4\nup 8\ndown 1\nup 7\ndown 7\ndown 8\nup 2\ndown 9\ndown 2\nforward 3\nforward 6\nforward 5\nforward 2\nforward 6\ndown 4\nforward 5\nup 5\nforward 3\ndown 4\nforward 3\ndown 4\nforward 9\nforward 7\nforward 9\nforward 7\nup 4\ndown 3\nforward 5\nforward 9\nforward 9\ndown 5\nforward 9\ndown 1\ndown 3\nforward 2\nforward 5\nforward 8\ndown 6\ndown 4\nforward 1\nup 6\ndown 8\nup 4\nup 8\nforward 3\ndown 3\ndown 2\nforward 3\nforward 4\ndown 9\ndown 4\nforward 6\nup 5\nforward 6\nup 1\ndown 3\nforward 9\ndown 5\ndown 4\nforward 9\nup 6\nforward 9\nforward 2\ndown 1\nforward 7\nforward 5\ndown 4\nforward 6\ndown 6\nup 3\nup 8\ndown 6\nforward 8\nforward 3\ndown 6\ndown 3\ndown 3\nup 6\nup 6\nup 1\nforward 7\nup 2\nforward 5\nforward 5\nup 3\nforward 7\nup 3\ndown 7\ndown 1\nforward 9\nforward 7\ndown 1\nforward 7\nforward 8\nforward 2\ndown 1\nup 3\ndown 6\nforward 5\nforward 4\nforward 2\ndown 8\nforward 3\ndown 9\ndown 4\nup 9\ndown 2\ndown 6\nup 2\nup 9\nforward 1\ndown 8\nforward 3\ndown 4\ndown 2\nforward 9\nforward 2\ndown 3\ndown 8\ndown 7\ndown 7\nup 2\ndown 7\ndown 2\ndown 4\nforward 8\nforward 1\ndown 5\nforward 2\nforward 1\nforward 6\ndown 7\nforward 1\ndown 4\nforward 1\nup 7\ndown 7\nforward 2\ndown 4\nforward 9\nup 1\nforward 7\nforward 3\nforward 3\ndown 2\ndown 6\nup 1\ndown 1\ndown 7\nforward 2\nforward 6\ndown 5\nup 4\ndown 9\nup 6\nforward 1\nforward 4\ndown 9\nup 7\ndown 8\nup 6\ndown 8\ndown 5\ndown 5\ndown 2\nforward 7\nforward 2\nup 2\nup 9\nforward 6\ndown 9\ndown 6\nforward 3\ndown 8\nforward 3\nforward 2\ndown 9\nforward 5\nup 3\nforward 5\ndown 1\nup 1\ndown 3\nforward 1\nforward 5\ndown 7\nforward 8\nforward 6\ndown 4\ndown 9\nforward 5\nforward 2\ndown 8\ndown 3\ndown 6\ndown 2\ndown 1\nforward 6\nforward 1\nforward 6\nup 9\ndown 4\nup 7\nforward 5\nup 6\ndown 3\nforward 6\nforward 3\nforward 2\nforward 2\nup 1\ndown 9\nforward 2\nforward 3\nup 1\nforward 3\nforward 2\ndown 4\ndown 8\nup 9\nup 1\nforward 4\nup 2\ndown 6\nforward 3\ndown 5\nup 5\nup 7\ndown 1\nforward 1\nforward 7\ndown 4\nforward 4\nforward 2\nforward 8\ndown 7\ndown 8\ndown 8\nforward 5\nforward 8\ndown 5\nforward 3\ndown 3\ndown 1\nforward 2\nforward 7\nforward 2\nforward 6\nforward 3\nforward 7\nup 6\ndown 5\nforward 6\ndown 5\ndown 7\nforward 6\nup 5\ndown 9\ndown 3\nforward 1\nforward 1\nforward 3\ndown 9\nforward 1\ndown 9\ndown 9\ndown 4\ndown 2\ndown 5\nup 6\nforward 1\ndown 7\ndown 2\nforward 9\ndown 8\ndown 2\nforward 7\ndown 8\nforward 2\nup 8\nup 6\nforward 9\ndown 7\nforward 1\ndown 4\ndown 7\nforward 1\nforward 4\ndown 1\nforward 9\ndown 1\nup 2\nup 4\nforward 3\ndown 4\nforward 7\nforward 1\nup 7\nup 4\nforward 7\nforward 2\nforward 5\ndown 7\ndown 9\nforward 4\nforward 6\ndown 9\nforward 6\nup 8\nforward 3\nforward 2\nforward 3\nforward 9\ndown 7\ndown 4\ndown 7\ndown 7\ndown 5\nforward 7\ndown 1\nforward 3\nup 3\ndown 1\nup 7\nup 7\nup 4\nforward 9\ndown 8\nup 4\nforward 6\nforward 8\ndown 8\nforward 1\ndown 6\nforward 1\nforward 4\nup 8\nforward 3\nup 6\nup 1\ndown 4\nup 1\nforward 8\nup 1\nforward 7\ndown 1\nup 9\ndown 3\nforward 4\ndown 6\ndown 7\nforward 7\nforward 4\ndown 1\nup 3\nforward 3\nup 7\nup 9\nup 9\nforward 7\ndown 8\nforward 5\nup 2\nforward 7\nforward 8\ndown 2\ndown 6\ndown 1\ndown 1\ndown 5\ndown 5\nup 5\nforward 1\nforward 3\ndown 9\ndown 6\nforward 9\nforward 1\ndown 4\nforward 7\nforward 6\nup 4\ndown 8\ndown 9\nforward 3\ndown 9\nup 5\nforward 3\nup 1\nforward 3\nforward 1\nforward 8\nup 6\ndown 6\nforward 9\nforward 7\nforward 8\ndown 1\nforward 9\nforward 1\nforward 3\nforward 6\ndown 1\ndown 9\ndown 9\nforward 1\ndown 2\ndown 5\nforward 7\nforward 6\ndown 5\nforward 8\nforward 1\nforward 5\nforward 6\ndown 6\ndown 9\ndown 7\nforward 7\ndown 2\ndown 2\nup 2\nforward 9\nforward 4\nforward 2\nup 9\nforward 3\nforward 1\nforward 6\ndown 4\ndown 9\ndown 9\ndown 1\ndown 3\ndown 1\nforward 5\ndown 7\nforward 9\nforward 7\nforward 4\nforward 7\nforward 8\nforward 5\ndown 8\ndown 1\nup 1\nforward 9\nforward 9\ndown 4\nup 7\nup 3\ndown 1\nforward 5\nforward 2\ndown 6\ndown 6\nup 3\ndown 6\nup 7\nforward 2\nforward 2\nforward 8\ndown 3\nup 5\ndown 4\nforward 5\ndown 4\nforward 8\ndown 5\ndown 2\nforward 6\ndown 2\ndown 3\ndown 5\nup 6\ndown 7\nforward 6\nforward 2\ndown 8\nup 1\nup 1\nforward 2\ndown 3\nforward 3\ndown 8\ndown 4\nforward 1\ndown 2\nforward 6\nup 3\nforward 8\ndown 6\nup 7\nforward 2\nforward 9\nforward 4\nforward 4\nup 7\nforward 6\nup 1\nforward 1\nforward 3\ndown 4\nup 7\nforward 8\nforward 4\ndown 8\nforward 4\ndown 8\nforward 9\ndown 3\ndown 4\nup 6\nup 1\nforward 7\nup 3\nforward 5\nforward 4\nforward 5\nforward 7\nforward 1\ndown 3\nup 5\nforward 7\nforward 4\ndown 9\ndown 6\ndown 7\nup 3\nup 7\nup 8\nup 9\ndown 4\nup 1\nforward 1\nup 3\nforward 6\ndown 8\nforward 4\ndown 7\ndown 5\ndown 4\nforward 7\nforward 5\ndown 4\ndown 7\nup 5\ndown 2\ndown 1\ndown 8\nforward 7\ndown 4\nforward 5\nup 9\ndown 3\nup 2\ndown 3\nforward 2\nforward 2\nforward 8\ndown 2\ndown 3\nforward 2\ndown 6\nforward 9\ndown 6\ndown 1\ndown 8\ndown 3\nforward 4\nforward 4\nforward 4\nup 8\nforward 8\nup 4\ndown 1\nforward 5\ndown 9\nforward 7\nup 9\nup 3\ndown 9\ndown 8\nforward 3\nforward 4\nforward 5\nforward 4\nup 7\ndown 2\nup 5\nforward 6\ndown 3\nforward 6\ndown 8\ndown 3\ndown 3\ndown 4\nforward 8\ndown 9\ndown 2\nforward 2\ndown 7\nforward 3\nup 2\nforward 4\ndown 8\nforward 2\nforward 9\nforward 3\ndown 6\nforward 9\ndown 7\nforward 1\nforward 2\nforward 4\nforward 4\nup 4\nup 2\ndown 7\nforward 9\nforward 9\nforward 7\nup 7\ndown 2\ndown 9\nforward 8\ndown 5\nup 2\ndown 6\nforward 9\nup 3\ndown 5\ndown 4\nforward 9\nforward 3\ndown 6\ndown 8\nup 5\nup 3\ndown 2\nforward 9\ndown 3\nforward 6\ndown 9\nforward 5\ndown 6\nup 6\ndown 6\nforward 6\nforward 1\ndown 3\ndown 3\nup 8\nforward 1\nforward 4\nup 2\nforward 3\nforward 1\nforward 8\nforward 7\ndown 7\ndown 4\ndown 6\ndown 2\nforward 3\ndown 2\nforward 6\nup 3\ndown 9\ndown 2\nforward 6\ndown 6\nforward 5\nforward 2\nup 4\nforward 5\nup 5\nup 5\nup 3\nforward 9\ndown 7\nforward 4\ndown 7\nup 5\ndown 3\nforward 5\nforward 3\ndown 7\nup 2\ndown 5\nforward 9\nforward 7\nup 7\nforward 5\nup 5\ndown 1\nup 7\nforward 9\ndown 8\nforward 2\nforward 8\ndown 7\ndown 3\ndown 1\nup 7\nforward 4\ndown 3\nforward 1\nforward 1\nforward 6\nup 7\nup 1\nforward 2\ndown 8\ndown 4\ndown 2\ndown 6\nforward 5\ndown 7\ndown 8\ndown 7\ndown 5\ndown 5\nforward 1\ndown 9\nforward 5\ndown 6\ndown 9\nup 3\ndown 4\nforward 3\ndown 6\nup 6\nforward 8\nforward 8\nforward 2\ndown 2\nup 1\nforward 6\nforward 6\nup 9\nup 4\nforward 9\nup 7\nup 6\ndown 2\ndown 3\nup 7\ndown 7\nforward 4\nforward 8\ndown 3\nforward 1\ndown 2\nforward 9\nforward 4\nforward 6\ndown 7\nup 9\nforward 9\nforward 1\nforward 2\ndown 1\ndown 8\ndown 7\nforward 3\ndown 4\ndown 9\nforward 2\nup 2\nforward 3\nup 3\ndown 9\ndown 2\nforward 3\ndown 3\nforward 7\nforward 6\ndown 6\ndown 7\nforward 2\ndown 9\nup 3\ndown 6\nforward 3\ndown 2\ndown 1\nup 6\ndown 3\ndown 3\ndown 1\ndown 5\ndown 3\nup 4\ndown 2\nforward 5\ndown 2\ndown 8\ndown 2\ndown 5\nforward 9\nforward 4\ndown 4\ndown 2\ndown 8\nforward 9\ndown 8\nforward 1\nup 6\nforward 6\ndown 7\ndown 1\ndown 2\ndown 8\ndown 8\nup 8\nforward 6\nforward 8\nforward 9\nforward 2\nforward 5`\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day2 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([])\n  const [prepData, setPrepData] = React.useState([])\n  const [first, setFirst] = React.useState()\n  const [second, setSecond] = React.useState()\n\n  // prep the data so we can use it\n  React.useEffect(() => {\n    const _input = input1.split('\\n').map(v => v.trim())\n    setPuzzleInput(_input)\n    const _prepData = _input.map(p => {\n      // expecting a 'direction #' format\n      const [ , direction, distance ] = p.match(/([a-z]*)\\s([0-9]*)/) // get the direction and the distance from the value\n      console.log(direction, distance)\n      switch (direction) { // translate the direction to the X or Y values\n        case 'forward':\n          return {\n            x: parseInt(distance),\n            y: 0\n          }\n        case 'backward':\n          return {\n            x: parseInt(distance) * -1,\n            y: 0\n          }\n        case 'up':\n          return {\n            x: 0,\n            y: parseInt(distance)\n          }\n        case 'down':\n          return {\n            x: 0,\n            y: parseInt(distance) * -1\n          }\n        default:\n          return {}\n      }\n    })\n    setPrepData(_prepData)\n  }, [])\n\n  // first challenge, where do they end up?\n  const [totalX, setTotalX] = React.useState(0) // starting at 0 horizontally\n  const [totalY, setTotalY] = React.useState(0) // starting at 0 depth\n  React.useEffect(() => {\n    if (prepData?.length > 0) {\n      let x = 0\n      let y = 0\n      prepData.forEach(p => {\n        x += p.x\n        y += p.y\n      })\n      setTotalX(x)\n      setTotalY(y)\n      setFirst(x * y * -1)\n    }\n  }, [prepData])\n\n  // second challenge, in addition to the location, we have to aim it as well\n  const [totalX2, setTotalX2] = React.useState(0) // starting at 0 horizontally\n  const [totalY2, setTotalY2] = React.useState(0) // starting at 0 depth\n  const [totalAim, setTotalAim] = React.useState(0) // starting aim at 0\n  React.useEffect(() => {\n    if (first && prepData?.length > 0) {\n      let x = 0\n      let y = 0\n      let aim = 0\n      prepData.forEach(p => {\n        x += p.x\n        aim += p.y * -1 // up/down opposite of what the data has been prepped above\n        if (p.x > 0) {\n          y += aim * p.x\n        }\n      })\n      setTotalAim(aim)\n      setTotalX2(x)\n      setTotalY2(y)\n      setSecond(x * y)\n    }\n  }, [first, prepData])\n\n  return (\n    <div>\n      <h2>Day 2 - Dive</h2>\n      <h3>Input: {puzzleInput.length} coordinates</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n      <h2>Answer #1</h2>\n      {totalX} horizontal x {totalY} depth = {first}\n      <h2>Answer #2</h2>\n      {totalX2} horizontal x {totalY2} depth = {second} (with an aim of {totalAim})\n    </div>\n  );\n}\n\nexport default Day2","const puzzle = `000110010001\n101000110000\n000110010111\n100011100010\n111001100001\n001010001010\n010100100101\n011000010000\n111111011010\n001111011101\n011011010010\n001100010101\n001010101100\n000000000000\n100010111111\n100100110011\n111100100001\n011110001110\n000110100101\n011101111001\n111101110110\n101001001111\n010111100010\n001110100011\n110010111101\n110000001101\n110110111101\n101100000110\n101101010110\n001011001110\n111110000111\n011110010110\n011001110100\n110101101110\n101110001100\n100111000010\n101111010001\n111110000101\n010100111111\n010110111011\n000000100101\n001000101011\n011100101110\n010011000100\n110011100001\n100100101110\n111101110011\n010100010010\n110100010000\n000101001101\n101010110100\n000011100110\n000100110100\n111001011001\n010101001110\n110100110100\n111010001010\n111111101111\n111000011001\n111110000000\n011111111011\n010100100001\n010110100100\n110000011110\n001100101101\n010011001000\n101110110110\n001001011011\n100100101101\n001111000100\n101001010000\n110101010010\n101111100101\n001011101010\n001110010111\n100111111000\n010010110110\n000100100010\n010111100100\n001000100001\n101100100111\n111001000001\n110010111100\n000110011101\n000001010010\n001010010111\n001101000100\n000110111101\n111011011000\n011110101000\n100101000011\n001000011100\n111101001001\n000011110011\n011010101001\n000111000101\n011000011001\n011010010100\n010110001110\n011010010110\n111010111110\n010101000010\n100010011100\n110001111100\n100101100001\n010001110010\n001000010011\n111010011101\n110001111000\n101100010011\n010000010110\n101011001101\n000110000101\n010000101111\n001100010100\n100110010111\n010000010001\n011100100101\n110011010000\n111101001110\n001101110010\n000011000110\n011000010111\n000101010000\n101111110110\n101001011000\n111010001000\n001100100010\n111100001100\n011000001100\n111010110100\n011111010110\n111011100000\n110010110110\n100111001101\n101111111010\n000101101110\n011011000111\n110001101100\n001110001110\n100100001011\n111000001110\n110000111111\n100110111111\n100100000011\n111101110001\n000100001111\n000101000111\n001011000111\n010011001100\n100001101110\n111100001010\n110100101101\n100111100001\n011000100111\n101010010010\n111101000111\n000010110101\n001100010010\n001111111101\n001101111011\n001011101110\n011100000111\n110010111111\n100110110101\n100110000001\n001011100010\n100010111000\n000000111000\n111010100100\n010101101110\n100111011111\n111101010100\n010000111011\n000101100001\n101010100000\n101110111100\n010000011011\n000101110110\n100110000000\n001001001001\n110110101100\n001100110011\n100111001111\n110111011101\n001110110010\n001010110000\n001001100101\n111100101101\n100001111100\n011001011110\n010010100010\n001011100100\n000100111010\n010110011100\n011100000101\n001110101010\n010011101010\n000011010001\n011101101100\n110100101001\n101011110110\n001010010101\n111110011010\n011001101111\n001000111111\n000011101101\n010001001001\n111011000010\n001011110010\n010000011001\n110000110001\n011001001000\n110011011000\n110101011001\n100000100011\n010011001111\n100100101000\n111111111100\n011011010101\n101100101010\n111110011111\n010101001000\n011110100000\n101001111111\n110000101110\n101011101110\n101111001110\n100000101101\n010010001011\n010100110111\n111011110001\n000100000010\n100000111000\n111111111000\n110111100111\n000001101101\n100001110011\n011010111110\n100111111100\n111111001010\n001001000100\n010010101101\n110100100000\n100010011111\n010000000110\n110111010111\n101000001000\n100100101001\n001001000010\n001111111010\n001011011000\n100010001111\n110011101110\n010111001110\n001011010011\n111011011011\n010100100100\n101011000111\n000011111111\n000110000111\n110000110100\n100101011011\n001001110110\n011100001001\n001111110100\n001111001101\n110010011001\n000100001001\n000110010110\n100001001010\n011100111000\n011101010111\n011111000110\n001000001001\n110011000101\n111111011011\n111110010011\n101111100000\n101011000100\n111110011101\n010100101010\n101011110000\n000100010100\n110110010010\n100011001101\n110110011010\n011100111011\n001111100001\n110011100101\n111001101011\n010000110101\n100100011100\n111000111001\n111000001011\n010110100011\n110011010100\n010011101111\n011011110111\n010101101010\n000000100100\n100111011101\n001101011000\n110111000101\n001011110100\n001100000100\n101010110010\n011000100000\n011001010100\n111100000000\n000100011000\n001000111000\n101101110010\n000100011001\n000100101001\n010010010101\n100010101101\n100010010110\n110101110000\n100011100110\n010010011100\n010001011011\n011100000110\n101000101011\n111010010000\n011100111001\n100001100110\n111100000110\n100001011100\n111001110101\n111011100111\n110101010001\n111100011000\n100111101010\n011110110000\n001011000101\n011010011111\n111100111110\n010100011010\n000010011101\n000110000110\n011001010001\n111000011100\n000111010110\n000000110101\n010011101011\n110011001110\n011011110110\n101100010101\n000011011001\n001100101011\n101000010101\n101100011010\n000111111110\n000011001001\n111011101110\n100111111010\n000101000011\n111100010011\n010001101010\n101001011110\n110010110000\n110101101001\n000011101110\n101101001010\n110100001101\n011100000011\n100011100101\n111010100110\n100010110001\n001011010000\n001001010100\n100101110100\n100100001111\n001000001010\n111001000101\n110110100000\n001010100010\n100100001110\n100111010010\n010110111000\n010100001010\n000010101100\n001010111100\n001111101001\n101011111101\n011011001001\n101000100110\n001010011101\n001011110000\n111110100000\n101100111010\n101111010111\n011000000101\n101100000010\n010101111110\n000011011100\n111110111010\n011110101110\n111011100010\n111100010001\n100000100110\n010111010000\n100010100101\n010111101010\n011011111111\n110111101000\n100000010000\n001011000010\n001001100011\n001000100110\n001001001011\n011110101101\n010111111101\n100100111100\n000011001101\n010101100000\n111100011100\n010111001010\n001101010011\n111011101111\n000000111101\n100000110110\n010000001101\n011110001011\n111100111100\n100101111110\n001000110010\n101011010000\n000101001111\n100001101101\n011011110001\n010010110010\n111011110111\n000001110110\n100110011110\n101100110011\n011011011010\n100100101010\n011011000110\n000100100011\n100101101001\n100110110000\n100100011001\n001010010001\n000001011101\n010011011010\n010101100101\n111101111011\n010100111011\n111000001001\n101100110101\n011111101010\n111110110111\n111111110000\n011001001100\n110001100100\n001000000011\n000110001010\n111000010100\n010101000000\n101001100000\n001010010010\n010001100000\n001000101110\n110111100001\n001111000010\n100111111101\n010111101110\n000110000011\n011100111101\n000011001111\n011101100110\n011110111110\n000010001010\n111101001100\n101101110011\n001000101111\n001011001000\n010110100101\n000110110010\n101101001000\n010100100000\n001111011110\n111001111111\n110010011101\n011010110001\n101101111010\n011000110110\n011101011111\n000011000111\n011010101101\n010000100110\n111001101110\n100001110100\n111100110110\n000001101011\n011111000011\n010001011001\n101010001000\n001100111001\n101111111111\n100000001101\n110011000000\n111000101011\n110001010110\n011100010001\n110110100110\n000010010100\n000001000101\n110111101011\n101110011011\n010010111000\n110000101101\n110100011101\n000111110001\n110001001010\n011000111110\n100111010110\n111100111000\n000010101001\n111100100101\n100110111001\n001001010000\n101110000010\n110011110101\n100010011101\n011000100101\n101011001000\n100111011000\n110101011111\n111100010110\n111001100110\n001110001000\n110110101001\n111001011010\n101011100101\n001101100001\n000111000110\n110001110110\n111100101011\n100010100100\n000101110001\n011101001000\n001110001100\n100100001010\n101010101111\n100011010011\n010001111101\n100101001001\n111110101111\n010011000101\n000110111011\n101101100011\n000110110110\n100000110000\n000001000001\n011111010111\n111110010101\n111101011011\n101011110111\n001000011111\n010010010000\n110110110010\n000110100000\n010010110101\n110110001111\n101111101000\n110101110101\n001100111110\n100101101110\n101111110101\n000111101001\n001011011111\n111011001011\n001001101100\n010101111010\n111110001100\n100010111100\n011000110111\n111111101100\n101001100001\n110000110111\n100010101000\n010010100011\n101110011001\n011101001001\n110000000110\n000110000010\n000111111101\n110001001100\n001001101010\n101010011010\n101100111101\n110010100010\n000101110101\n000000010101\n101010110000\n101010110001\n101001001100\n010001101110\n010011111001\n010010111011\n001110110101\n101000000110\n101110000101\n110110001101\n101000100000\n011001100110\n101111100110\n111110001010\n110010101011\n100111000111\n111001111101\n100001011111\n101101101110\n010100100010\n111100111011\n001011100110\n000001011010\n101111100010\n110000000000\n111100010101\n110100001001\n100010011010\n111000110010\n101000110011\n111101011111\n100011111011\n101001100111\n011011111101\n111011010111\n011101010011\n010010000111\n110011111101\n011101011101\n010101100111\n010111000000\n100111000001\n001110101101\n000111101110\n000100110000\n001110110111\n010000111010\n001010001001\n101001000111\n111010100010\n110001000011\n011111010000\n000110010000\n001001011111\n000100011111\n110001010011\n110000010011\n000011010101\n100101001110\n101110010101\n000011110000\n011111100111\n001111101100\n101111101100\n101110111101\n110111111001\n011110111101\n111110010111\n101110100001\n000110100010\n011000001000\n111000110101\n101000011100\n100110010100\n001111111111\n111001111001\n111111000110\n000110100100\n111000110000\n110011010110\n001010011001\n101000011011\n100011111111\n011001100000\n110100101100\n001001111000\n000100001100\n010101000001\n101010110111\n100110100000\n100110000011\n111101000011\n001101001010\n000000011111\n000101000110\n001110111001\n101110001011\n001111011010\n000100110010\n010011011001\n011100101001\n010110011001\n001011001101\n011110100010\n011000011100\n001001110010\n100000000010\n010111010010\n000010100000\n011000011110\n010100110010\n010101010001\n011010101100\n000100100001\n110101001011\n111110111101\n010100100110\n110010000100\n000101010001\n110100000001\n001010100011\n011101100101\n010101011110\n010101110101\n010101011100\n010011001010\n010011110001\n111111100000\n011110111010\n110010101010\n001111010001\n111110111110\n110001010101\n001011010001\n110111000110\n000011010011\n000001101001\n011010100100\n100000010111\n000000100001\n110000110010\n001101111101\n101011111111\n100100100010\n000001110111\n001111110101\n001111000011\n101000111100\n100100101111\n111000000101\n000011100011\n110101100010\n110001010111\n011000111100\n010000011111\n000001011000\n110011100000\n111100100111\n000010001011\n100111101001\n011111100000\n101101111001\n101100101100\n001000110100\n111111010111\n000110001101\n011111100001\n111000001100\n000111100100\n001111000000\n000101110010\n101100011001\n000001000100\n001001001101\n111001010101\n000011111011\n011111110000\n000000110001\n100111110011\n101001001011\n101000110110\n111001010100\n000011110100\n010001100001\n001111001110\n100001101001\n000001101111\n101000000001\n111101010000\n011111011001\n111111011110\n110110010110\n001011101100\n100001010111\n101011011100\n110010101001\n001000001100\n001101010101\n111111111110\n001100100011\n110000110110\n000000000110\n101000001010\n001111001100\n100011110001\n111011000001\n011010100110\n011110100100\n001110011111\n010101101011\n010110010111\n101100110110\n000101100010\n110010010000\n010100010000\n111011000111\n011010111011\n100000100111\n001111011000\n001010111011\n000010111111\n110001000101\n000111010101\n010011110111\n111010110000\n100111110110\n101011010001\n011001111111\n110110100010\n110111110110\n011010110111\n111000100011\n100010011000\n111001000010\n000100000111\n011101001010\n111001000111\n000110010100\n011011010110\n100100110100\n010011000001\n101000111011\n100100000000\n010010101110\n011111001101\n001100001100\n010111100001\n100101101010\n100110001101\n010111000101\n010100011011\n000010000011\n111000111111\n100111011100\n111110011011\n011110110110\n001000001111\n100110110111\n100000001011\n001111001011\n010010111101\n010001111000\n110010110101\n011001100101\n100110001111\n110001101010\n000100101011\n101110111010\n011111100011\n101010111111\n011101100001\n100000001010\n010000001000\n110110001010\n110001010010\n101001111001\n000100001101\n111100001111\n111101000110\n001010111001\n000101011010\n101001010010\n101011110001\n011011110101\n110101110100\n000001111001\n111000001111\n101110110000\n001101110101\n011010110010\n101000001110\n100011111001\n000111011101\n110011010101\n010111101101\n000010111011\n000100101010\n100101100101\n100000011001\n010110110100\n011010100000\n010100010001\n110010100101\n010100111110\n011100011101\n100011110010\n101000000010\n011001100001\n111111100100\n010011000011\n001101010010\n111100100000\n110101101111\n101001110001\n101100111111\n010111110010\n100011000100\n101101001101\n000000101001\n110100110000\n000110010010\n100111001110\n110011100110\n010110100010\n000111010100\n001101000001\n111010000011\n011001010110\n101000100010\n111010001001\n010101100001\n011001110010\n000111000111\n110001010001\n000111010001\n000001111100\n010001000001\n100110000010\n111111000111\n110111001111\n010010001001\n001001101111\n000110101111\n110011011111\n100010100111\n001010000010\n000000110110\n111111111101\n011111101111\n100111101111\n111111110111\n101111011001\n111010111011\n001001111110\n000010001100\n111011001111\n111111100011\n100010010011\n101110101011\n111010111111\n001111000110\n110000001100\n100110100110\n001110001101\n001000111100\n010011000110\n011011011100\n110110011001\n001000111010\n101100000011\n110100111101\n011100001011\n011101000100\n011100010011\n101001000001\n000001101010\n110000001010\n010100010100\n101001100110\n000100100101\n001000111101\n101101011111\n011001000010\n101000100001\n111110100011\n111101010010\n110111010101\n010111110100\n010001010001\n010110011110\n101001010001\n100110111100\n110011100010\n010110001011\n110001001101\n001100100111\n001001001111\n011000110100\n000010010001\n101010101110\n111100111111\n000010100010\n011010111101`\n\nexport default puzzle;","import React from 'react'\nimport input1 from './input1';\n\nconst Day3 = () => {\n  const [puzzleInput, setPuzzleInput] = React.useState([]);\n  const [gammaBinary, setGammaBinary] = React.useState('')\n  const [gammaRate, setGammaRate] = React.useState(0)\n  const [epsilonBinary, setEpsilonBinary] = React.useState('')\n  const [epsilonRate, setEpsilonRate] = React.useState(0)\n  const [first, setFirst] = React.useState()\n\n  const [oxygenBinary, setOxygenBinary] = React.useState('')\n  const [co2Binary, setCO2Binary] = React.useState('')\n  const [oxygenRating, setOxygenRating] = React.useState(0)\n  const [co2Rating, setCO2Rating] = React.useState(0)\n  const [second, setSecond] = React.useState()\n\n  const getBinaries = (binaryArray) => {\n    const counts = new Map()\n    binaryArray.forEach(p => { // loop through and add the numbers, this will give us the count of 1s in each position\n      const bits = p.split(\"\");\n      bits.forEach((b, indx) => {\n        const bNum = parseInt(b)\n        if (counts.has(indx)) {\n          counts.set(indx, counts.get(indx) + bNum)\n        } else {\n          counts.set(indx, bNum)\n        }\n      })\n    })\n    console.log(counts)\n    const totalNums = binaryArray.length\n    let _gammaRate = ''\n    let _epsilonRate = ''\n    // determine the common and least common bits, minus the count of ones from the length to get the count of 0s\n    counts.forEach((value, key) => {\n      if (totalNums - value > value) {\n        _gammaRate += '0'\n        _epsilonRate += '1'\n      } else {\n        _gammaRate += '1'\n        _epsilonRate += '0'\n      }\n    })\n\n    return [_gammaRate, _epsilonRate]\n  }\n  // get the input into a usable array\n  React.useEffect(() => {\n   setPuzzleInput(input1.split('\\n').map(v => v.trim()))\n  }, [])\n\n  // first challenge, find the most common bits (gamma rate) and the least common bits (epsilon rate) to find the power consumption\n  React.useEffect(() => {\n    if (puzzleInput?.length > 0) {\n      const [_gammaRate, _epsilonRate] = getBinaries(puzzleInput)\n\n      setGammaBinary(_gammaRate) // this will be needed in the 2nd puzzle\n      setEpsilonBinary(_epsilonRate)\n\n      const _gamma = parseInt(_gammaRate, 2) // convert binary to decimal\n      const _epsilon = parseInt(_epsilonRate, 2) // convert binary to decimal\n      setGammaRate(_gamma)\n      setEpsilonRate(_epsilon)\n\n      setFirst(_gamma * _epsilon)\n    }\n  }, [puzzleInput])\n\n  // second challenge, find the most common value (oxygen generator rating) comparing each bit and filtering out the least common bit\n  // find the lease common value (CO2 scrubber rating) comparing each bit and filtering out the most common bit\n  React.useEffect(() => {\n    if (gammaBinary) {\n      console.warn('starting second challenge')\n\n      // find the oxygen generator rating\n      let oxyResults = [...puzzleInput]\n      let commonBits = gammaBinary\n      let bitIndex = 0\n      while (bitIndex < commonBits.length && oxyResults.length > 1) {\n        const bit = commonBits.substring(bitIndex, bitIndex + 1)\n        console.log(commonBits, bitIndex, bit)\n        oxyResults = oxyResults.filter(r => r.substring(bitIndex, bitIndex + 1) === bit)\n        console.log('found', oxyResults.length)\n        commonBits = getBinaries(oxyResults)[0]\n        bitIndex += 1\n      }\n      setOxygenBinary(oxyResults[0])\n      setOxygenRating(parseInt(oxyResults[0], 2))\n     \n      // find the CO2 scrubber rating\n      let co2Results = [...puzzleInput]\n      commonBits = epsilonBinary\n      bitIndex = 0\n      while (bitIndex < commonBits.length && co2Results.length > 1) {\n        const bit = commonBits.substring(bitIndex, bitIndex + 1)\n        console.log(commonBits, bitIndex, bit)\n        co2Results = co2Results.filter(r => r.substring(bitIndex, bitIndex + 1) === bit)\n        console.log('found', co2Results.length)\n        commonBits = getBinaries(co2Results)[1]\n        bitIndex += 1\n      }\n      setCO2Binary(co2Results[0])\n      setCO2Rating(parseInt(co2Results[0], 2))\n\n      setSecond(parseInt(oxyResults[0], 2) * parseInt(co2Results[0], 2))\n    }\n  }, [gammaBinary, epsilonBinary, puzzleInput])\n\n  return (\n    <div>\n      <h2>Day 3 - Binary Diagnostic</h2>\n      <h2>Answer #1</h2>\n      {gammaRate} ({gammaBinary}) gamma rate x {epsilonRate} ({epsilonBinary}) epsilon rate = {first}\n      <h2>Answer #2</h2>\n      {oxygenRating} ({oxygenBinary}) oxygen generator rating x {co2Rating} ({co2Binary}) CO2 scrubber rating = {second}\n      <h3>Input: {puzzleInput.length} numbers</h3>\n      <div dangerouslySetInnerHTML={{ __html: puzzleInput.join('<br/>') }} className=\"puzzle-input\"></div>\n    </div>\n  );\n}\n\nexport default Day3","import React from 'react';\nimport Day1 from './01-sonar-sweep/day1';\nimport Day2 from './02-dive/day2';\nimport Day3 from './03-binary-diagnostic/day3';\n\nimport './App.css';\n\nfunction App() {\n  const [selectedDay, setSelectedDay] = React.useState(null);\n  const [selectedDayComponent, setSelectedDayComponent] = React.useState(null);\n\n  React.useEffect(() => {\n    switch (selectedDay) {\n      case 'day1':\n        setSelectedDayComponent(<Day1 />)\n        break;\n      case 'day2':\n        setSelectedDayComponent(<Day2 />)\n        break;\n      case 'day3':\n        setSelectedDayComponent(<Day3 />)\n        break;\n      default:\n        setSelectedDayComponent(null);\n    }\n  }, [selectedDay])\n\n  return <div className=\"App\">\n    <div class=\"snowflakes\" aria-hidden=\"true\">\n      <div class=\"snowflake\">\n      ❅\n      </div>\n      <div class=\"snowflake\">\n      ❆\n      </div>\n      <div class=\"snowflake\">\n      ❅\n      </div>\n      <div class=\"snowflake\">\n      ❆\n      </div>\n      <div class=\"snowflake\">\n      ❅\n      </div>\n      <div class=\"snowflake\">\n      ❆\n      </div>\n      <div class=\"snowflake\">\n        ❅\n      </div>\n      <div class=\"snowflake\">\n        ❆\n      </div>\n      <div class=\"snowflake\">\n        ❅\n      </div>\n      <div class=\"snowflake\">\n        ❆\n      </div>\n      <div class=\"snowflake\">\n        ❅\n      </div>\n      <div class=\"snowflake\">\n        ❆\n      </div>\n    </div>\n    <header className=\"App-header\">\n      <h2>Advent of Code 2021</h2>\n      <div><a href=\"https://twitter.com/davidlozzi\" target=\"_blank\" rel=\"noreferrer\">by david lozzi</a> <a href=\"https://github.com/DavidLozzi/AdventOfCode21\">go to code repo</a></div>\n    </header>\n    <div className=\"container\">\n      {selectedDay && <button onClick={() => setSelectedDay('') } className=\"back-button\">Back</button>}\n    {selectedDayComponent}\n    {!selectedDay && <div className=\"buttons-wrapper\">\n        <button onClick={() => setSelectedDay('day1')}>Day 1 - Sonar Sweep</button>\n        <button onClick={() => setSelectedDay('day2')}>Day 2 - Dive</button>\n        <button onClick={() => setSelectedDay('day3')}>Day 3 - Binary Diagnostic</button>\n      </div>}\n    </div>\n </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}